{"version":3,"file":"vue3-treeselect.mjs","sources":["../node_modules/fuzzysearch/index.js","../node_modules/lodash/noop.js","../src/utils/warning.js","../src/utils/onLeftClick.js","../src/utils/scrollIntoView.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_root.js","../node_modules/lodash/now.js","../node_modules/lodash/_trimmedEndIndex.js","../node_modules/lodash/_baseTrim.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/debounce.js","../node_modules/watch-size/index.es.mjs","../src/utils/removeFromArray.js","../src/utils/watchSize.js","../src/utils/setupResizeAndScrollEventListeners.js","../src/utils/isNaN.js","../node_modules/is-promise/index.mjs","../node_modules/lodash/toFinite.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/before.js","../node_modules/lodash/once.js","../node_modules/lodash/identity.js","../node_modules/lodash/constant.js","../src/utils/createMap.js","../src/utils/deepExtend.js","../node_modules/lodash/last.js","../src/utils/includes.js","../src/utils/find.js","../src/utils/quickDiff.js","../src/constants.js","../src/mixins/treeselectMixin.js","../src/components/HiddenFields.vue","../src/components/Input.vue","../src/components/Placeholder.vue","../src/components/SingleValue.vue","../src/components/icons/Delete.vue","../src/components/MultiValueItem.vue","../src/components/MultiValue.vue","../src/components/icons/Arrow.vue","../src/components/Control.vue","../src/components/Tip.vue","../src/components/Option.vue","../src/components/Menu.vue","../src/components/MenuPortal.vue","../src/components/Treeselect.vue"],"sourcesContent":["'use strict';\n\nfunction fuzzysearch (needle, haystack) {\n  var tlen = haystack.length;\n  var qlen = needle.length;\n  if (qlen > tlen) {\n    return false;\n  }\n  if (qlen === tlen) {\n    return needle === haystack;\n  }\n  outer: for (var i = 0, j = 0; i < qlen; i++) {\n    var nch = needle.charCodeAt(i);\n    while (j < tlen) {\n      if (haystack.charCodeAt(j++) === nch) {\n        continue outer;\n      }\n    }\n    return false;\n  }\n  return true;\n}\n\nmodule.exports = fuzzysearch;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","import { noop } from './noop'\n\nexport const warning = process.env.NODE_ENV === 'production'\n  ? /* istanbul ignore next */ noop\n  : function warning(checker, complainer) {\n    if (!checker()) {\n      const message = [ '[Vue-Treeselect Warning]' ].concat(complainer())\n      // eslint-disable-next-line no-console\n      console.error(...message)\n    }\n  }\n","export function onLeftClick(mouseDownHandler) {\n  return function onMouseDown(evt, ...args) {\n    if (evt.type === 'mousedown' && evt.button === 0) {\n      mouseDownHandler.call(this, evt, ...args)\n    }\n  }\n}\n","// from react-select\nexport function scrollIntoView($scrollingEl, $focusedEl) {\n  const scrollingReact = $scrollingEl.getBoundingClientRect()\n  const focusedRect = $focusedEl.getBoundingClientRect()\n  const overScroll = $focusedEl.offsetHeight / 3\n\n  if (focusedRect.bottom + overScroll > scrollingReact.bottom) {\n    $scrollingEl.scrollTop = Math.min(\n      $focusedEl.offsetTop + $focusedEl.clientHeight - $scrollingEl.offsetHeight + overScroll,\n      $scrollingEl.scrollHeight,\n    )\n  } else if (focusedRect.top - overScroll < scrollingReact.top) {\n    $scrollingEl.scrollTop = Math.max($focusedEl.offsetTop - overScroll, 0)\n  }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var index = (function (element, listener) {\n\tvar expand = document.createElement('_');\n\tvar shrink = expand.appendChild(document.createElement('_'));\n\tvar expandChild = expand.appendChild(document.createElement('_'));\n\tvar shrinkChild = shrink.appendChild(document.createElement('_'));\n\n\tvar lastWidth = void 0,\n\t    lastHeight = void 0;\n\n\tshrink.style.cssText = expand.style.cssText = 'height:100%;left:0;opacity:0;overflow:hidden;pointer-events:none;position:absolute;top:0;transition:0s;width:100%;z-index:-1';\n\tshrinkChild.style.cssText = expandChild.style.cssText = 'display:block;height:100%;transition:0s;width:100%';\n\tshrinkChild.style.width = shrinkChild.style.height = '200%';\n\n\telement.appendChild(expand);\n\n\ttest();\n\n\treturn stop;\n\n\tfunction test() {\n\t\tunbind();\n\n\t\tvar width = element.offsetWidth;\n\t\tvar height = element.offsetHeight;\n\n\t\tif (width !== lastWidth || height !== lastHeight) {\n\t\t\tlastWidth = width;\n\t\t\tlastHeight = height;\n\n\t\t\texpandChild.style.width = width * 2 + 'px';\n\t\t\texpandChild.style.height = height * 2 + 'px';\n\n\t\t\texpand.scrollLeft = expand.scrollWidth;\n\t\t\texpand.scrollTop = expand.scrollHeight;\n\t\t\tshrink.scrollLeft = shrink.scrollWidth;\n\t\t\tshrink.scrollTop = shrink.scrollHeight;\n\n\t\t\tlistener({ width: width, height: height });\n\t\t}\n\n\t\tshrink.addEventListener('scroll', test);\n\t\texpand.addEventListener('scroll', test);\n\t}\n\n\tfunction unbind() {\n\t\tshrink.removeEventListener('scroll', test);\n\t\texpand.removeEventListener('scroll', test);\n\t}\n\n\tfunction stop() {\n\t\tunbind();\n\n\t\telement.removeChild(expand);\n\t}\n});\n\nexport default index;\n","export function removeFromArray(arr, elem) {\n  const idx = arr.indexOf(elem)\n  if (idx !== -1) arr.splice(idx, 1)\n}\n","import watchSizeForBrowsersOtherThanIE9 from 'watch-size'\nimport { removeFromArray } from './removeFromArray'\n\nlet intervalId\nconst registered = []\nconst INTERVAL_DURATION = 100\n\nfunction run() {\n  intervalId = setInterval(() => {\n    registered.forEach(test)\n  }, INTERVAL_DURATION)\n}\n\nfunction stop() {\n  clearInterval(intervalId)\n  intervalId = null\n}\n\nfunction test(item) {\n  const { $el, listener, lastWidth, lastHeight } = item\n  const width = $el.offsetWidth\n  const height = $el.offsetHeight\n\n  if (lastWidth !== width || lastHeight !== height) {\n    item.lastWidth = width\n    item.lastHeight = height\n\n    listener({ width, height })\n  }\n}\n\nfunction watchSizeForIE9($el, listener) {\n  const item = {\n    $el,\n    listener,\n    lastWidth: null,\n    lastHeight: null,\n  }\n  const unwatch = () => {\n    removeFromArray(registered, item)\n    if (!registered.length) stop()\n  }\n\n  registered.push(item)\n  // The original watch-size will call the listener on initialization.\n  // Keep the same behavior here.\n  test(item)\n  run()\n\n  return unwatch\n}\n\nexport function watchSize($el, listener) {\n  // See: https://stackoverflow.com/a/31293352\n  const isIE9 = document.documentMode === 9\n  // watch-size will call the listener on initialization.\n  // Disable this behavior with a lock to achieve a clearer code logic.\n  let locked = true\n  const wrappedListener = (...args) => locked || listener(...args)\n  const implementation = isIE9\n    ? watchSizeForIE9\n    : watchSizeForBrowsersOtherThanIE9\n  const removeSizeWatcher = implementation($el, wrappedListener)\n  locked = false // unlock after initialization\n\n  return removeSizeWatcher\n}\n","function findScrollParents($el) {\n  const $scrollParents = []\n  let $parent = $el.parentNode\n\n  while ($parent && $parent.nodeName !== 'BODY' && $parent.nodeType === document.ELEMENT_NODE) {\n    if (isScrollElment($parent)) $scrollParents.push($parent)\n    $parent = $parent.parentNode\n  }\n  $scrollParents.push(window)\n\n  return $scrollParents\n}\n\nfunction isScrollElment($el) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle($el)\n  return /(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)\n}\n\nexport function setupResizeAndScrollEventListeners($el, listener) {\n  const $scrollParents = findScrollParents($el)\n\n  window.addEventListener('resize', listener, { passive: true })\n  $scrollParents.forEach(scrollParent => {\n    scrollParent.addEventListener('scroll', listener, { passive: true })\n  })\n\n  return function removeEventListeners() {\n    window.removeEventListener('resize', listener, { passive: true })\n    $scrollParents.forEach($scrollParent => {\n      $scrollParent.removeEventListener('scroll', listener, { passive: true })\n    })\n  }\n}\n","export function isNaN(x) {\n  return x !== x\n}\n","export default function isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nmodule.exports = before;\n","var before = require('./before');\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nmodule.exports = once;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","export const createMap = () => Object.create(null)\n","function isPlainObject(value) {\n  if (value == null || typeof value !== 'object') return false\n  return Object.getPrototypeOf(value) === Object.prototype\n}\n\nfunction copy(obj, key, value) {\n  if (isPlainObject(value)) {\n    obj[key] || (obj[key] = {})\n    deepExtend(obj[key], value)\n  } else {\n    obj[key] = value\n  }\n}\n\nexport function deepExtend(target, source) {\n  if (isPlainObject(source)) {\n    const keys = Object.keys(source)\n\n    for (let i = 0, len = keys.length; i < len; i++) {\n      copy(target, keys[i], source[keys[i]])\n    }\n  }\n\n  return target\n}\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","export function includes(arrOrStr, elem) {\n  return arrOrStr.indexOf(elem) !== -1\n}\n","export function find(arr, predicate, ctx) {\n  for (let i = 0, len = arr.length; i < len; i++) {\n    if (predicate.call(ctx, arr[i], i, arr)) return arr[i]\n  }\n  return undefined\n}\n","export function quickDiff(arrA, arrB) {\n  if (arrA.length !== arrB.length) return true\n\n  for (let i = 0; i < arrA.length; i++) {\n    if (arrA[i] !== arrB[i]) return true\n  }\n\n  return false\n}\n","// Magic value that indicates a root level node.\nexport const NO_PARENT_NODE = null\n\n// Types of checked state.\nexport const UNCHECKED = 0\nexport const INDETERMINATE = 1\nexport const CHECKED = 2\n\n// Types of count number.\nexport const ALL_CHILDREN = 'ALL_CHILDREN'\nexport const ALL_DESCENDANTS = 'ALL_DESCENDANTS'\nexport const LEAF_CHILDREN = 'LEAF_CHILDREN'\nexport const LEAF_DESCENDANTS = 'LEAF_DESCENDANTS'\n\n// Action types of delayed loading.\nexport const LOAD_ROOT_OPTIONS = 'LOAD_ROOT_OPTIONS'\nexport const LOAD_CHILDREN_OPTIONS = 'LOAD_CHILDREN_OPTIONS'\nexport const ASYNC_SEARCH = 'ASYNC_SEARCH'\n\n// Acceptable values of `valueConsistsOf` prop.\nexport const ALL = 'ALL'\nexport const BRANCH_PRIORITY = 'BRANCH_PRIORITY'\nexport const LEAF_PRIORITY = 'LEAF_PRIORITY'\nexport const ALL_WITH_INDETERMINATE = 'ALL_WITH_INDETERMINATE'\n\n// Acceptable values of `sortValueBy` prop.\nexport const ORDER_SELECTED = 'ORDER_SELECTED'\nexport const LEVEL = 'LEVEL'\nexport const INDEX = 'INDEX'\n\n// Key codes look-up table.\nexport const KEY_CODES = {\n    BACKSPACE: 8,\n    ENTER: 13,\n    ESCAPE: 27,\n    END: 35,\n    HOME: 36,\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    DELETE: 46,\n}\n\n// Other constants.\nexport const INPUT_DEBOUNCE_DELAY = process.env.NODE_ENV === 'testing'\n    ? /* to speed up unit testing */ 10\n    : /* istanbul ignore next */ 200\nexport const MIN_INPUT_WIDTH = 5\nexport const MENU_BUFFER = 40\n","import fuzzysearch from 'fuzzysearch'\n\nimport {\n  warning,\n  onLeftClick, scrollIntoView,\n  isNaN, isPromise, once,\n  identity, constant, createMap,\n  quickDiff, last as getLast, includes, find, removeFromArray,\n} from '@/utils'\n\nimport {\n  NO_PARENT_NODE,\n  UNCHECKED, INDETERMINATE, CHECKED,\n  LOAD_ROOT_OPTIONS, LOAD_CHILDREN_OPTIONS, ASYNC_SEARCH,\n  ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE,\n  ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS,\n  ORDER_SELECTED, LEVEL, INDEX,\n} from '@/constants'\n\nfunction sortValueByIndex(a, b) {\n  let i = 0\n  do {\n    if (a.level < i) return -1\n    if (b.level < i) return 1\n    if (a.index[i] !== b.index[i]) return a.index[i] - b.index[i]\n    i++\n  } while (true)\n}\n\nfunction sortValueByLevel(a, b) {\n  return a.level === b.level\n    ? sortValueByIndex(a, b)\n    : a.level - b.level\n}\n\nfunction createAsyncOptionsStates() {\n  return {\n    isLoaded: false,\n    isLoading: false,\n    loadingError: '',\n  }\n}\n\nfunction stringifyOptionPropValue(value) {\n  if (typeof value === 'string') return value\n  if (typeof value === 'number' && !isNaN(value)) return value + ''\n  // istanbul ignore next\n  return ''\n}\n\nfunction match(enableFuzzyMatch, needle, haystack) {\n  return enableFuzzyMatch\n    ? fuzzysearch(needle, haystack)\n    : includes(haystack, needle)\n}\n\nfunction getErrorMessage(err) {\n  return err.message || /* istanbul ignore next */String(err)\n}\n\nlet instanceId = 0\n\nexport default {\n  provide() {\n    return {\n      // Enable access to the instance of root component of vue-treeselect\n      // across hierarchy.\n      instance: this,\n    }\n  },\n\n  props: {\n    /**\n     * Whether to allow resetting value even if there are disabled selected nodes.\n     */\n    allowClearingDisabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When an ancestor node is selected/deselected, whether its disabled descendants should be selected/deselected.\n     * You may want to use this in conjunction with `allowClearingDisabled` prop.\n     */\n    allowSelectingDisabledDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether the menu should be always open.\n     */\n    alwaysOpen: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Append the menu to <body />?\n     */\n    appendToBody: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable async search mode.\n     */\n    async: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically focus the component on mount?\n     */\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Automatically load root options on mount. When set to `false`, root options will be loaded when the menu is opened.\n     */\n    autoLoadRootOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its ancestors. Applies to flat mode only.\n     */\n    autoDeselectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user deselects a node, automatically deselect its descendants. Applies to flat mode only.\n     */\n    autoDeselectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its ancestors. Applies to flat mode only.\n     */\n    autoSelectAncestors: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * When user selects a node, automatically select its descendants. Applies to flat mode only.\n     */\n    autoSelectDescendants: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether pressing backspace key removes the last item if there is no text input.\n     */\n    backspaceRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Function that processes before clearing all input fields.\n     * Return `false` to prevent value from being cleared.\n     * @type {function(): (boolean|Promise<boolean>)}\n     */\n    beforeClearAll: {\n      type: Function,\n      default: constant(true),\n    },\n\n    /**\n     * Show branch nodes before leaf nodes?\n     */\n    branchNodesFirst: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Should cache results of every search request?\n     */\n    cacheOptions: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Show an \"×\" button that resets value?\n     */\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Title for the \"×\" button when `multiple: true`.\n     */\n    clearAllText: {\n      type: String,\n      default: 'Clear all',\n    },\n\n    /**\n     * Whether to clear the search input after selecting.\n     * Use only when `multiple` is `true`.\n     * For single-select mode, it **always** clears the input after selecting an option regardless of the prop value.\n     */\n    clearOnSelect: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Title for the \"×\" button.\n     */\n    clearValueText: {\n      type: String,\n      default: 'Clear value',\n    },\n\n    /**\n     * Whether to close the menu after selecting an option?\n     * Use only when `multiple` is `true`.\n     */\n    closeOnSelect: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * How many levels of branch nodes should be automatically expanded when loaded.\n     * Set `Infinity` to make all branch nodes expanded by default.\n     */\n    defaultExpandLevel: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The default set of options to show before the user starts searching. Used for async search mode.\n     * When set to `true`, the results for search query as a empty string will be autoloaded.\n     * @type {boolean|node[]}\n     */\n    defaultOptions: {\n      default: false,\n    },\n\n    /**\n     * Whether pressing delete key removes the last item if there is no text input.\n     */\n    deleteRemoves: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Delimiter to use to join multiple values for the hidden field value.\n     */\n    delimiter: {\n      type: String,\n      default: ',',\n    },\n\n    /**\n     * Only show the nodes that match the search value directly, excluding its ancestors.\n     *\n     * @type {Object}\n     */\n    flattenSearchResults: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Prevent branch nodes from being selected?\n     */\n    disableBranchNodes: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the control?\n     */\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Disable the fuzzy matching functionality?\n     */\n    disableFuzzyMatching: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Whether to enable flat mode or not. Non-flat mode (default) means:\n     *   - Whenever a branch node gets checked, all its children will be checked too\n     *   - Whenever a branch node has all children checked, the branch node itself will be checked too\n     * Set `true` to disable this mechanism\n     */\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Will be passed with all events as the last param.\n     * Useful for identifying events origin.\n    */\n    instanceId: {\n      // Add two trailing \"$\" to distinguish from explictly specified ids.\n      default: () => `${instanceId++}$$`,\n      type: [ String, Number ],\n    },\n\n    /**\n     * Joins multiple values into a single form field with the `delimiter` (legacy mode).\n    */\n    joinValues: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Limit the display of selected options.\n     * The rest will be hidden within the limitText string.\n     */\n    limit: {\n      type: Number,\n      default: Infinity,\n    },\n\n    /**\n     * Function that processes the message shown when selected elements pass the defined limit.\n     * @type {function(number): string}\n     */\n    limitText: {\n      type: Function,\n      default: function limitTextDefault(count) { // eslint-disable-line func-name-matching\n        return `and ${count} more`\n      },\n    },\n\n    /**\n     * Text displayed when loading options.\n     */\n    loadingText: {\n      type: String,\n      default: 'Loading...',\n    },\n\n    /**\n     * Used for dynamically loading options.\n     * @type {function({action: string, callback: (function((Error|string)=): void), parentNode: node=, instanceId}): void}\n     */\n    loadOptions: {\n      type: Function,\n    },\n\n    /**\n     * Which node properties to filter on.\n     */\n    matchKeys: {\n      type: Array,\n      default: constant([ 'label' ]),\n    },\n\n    /**\n     * Sets `maxHeight` style value of the menu.\n     */\n    maxHeight: {\n      type: Number,\n      default: 300,\n    },\n\n    /**\n     * Set `true` to allow selecting multiple options (a.k.a., multi-select mode).\n     */\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Generates a hidden <input /> tag with this field name for html forms.\n     */\n    name: {\n      type: String,\n    },\n\n    /**\n     * Text displayed when a branch node has no children.\n     */\n    noChildrenText: {\n      type: String,\n      default: 'No sub-options.',\n    },\n\n    /**\n     * Text displayed when there are no available options.\n     */\n    noOptionsText: {\n      type: String,\n      default: 'No options available.',\n    },\n\n    /**\n     * Text displayed when there are no matching search results.\n     */\n    noResultsText: {\n      type: String,\n      default: 'No results found...',\n    },\n\n    /**\n     * Used for normalizing source data.\n     * @type {function(node, instanceId): node}\n     */\n    normalizer: {\n      type: Function,\n      default: identity,\n    },\n\n    /**\n     * By default (`auto`), the menu will open below the control. If there is not\n     * enough space, vue-treeselect will automatically flip the menu.\n     * You can use one of other four options to force the menu to be always opened\n     * to specified direction.\n     * Acceptable values:\n     *   - `\"auto\"`\n     *   - `\"below\"`\n     *   - `\"bottom\"`\n     *   - `\"above\"`\n     *   - `\"top\"`\n     */\n    openDirection: {\n      type: String,\n      default: 'auto',\n      validator(value) {\n        const acceptableValues = [ 'auto', 'top', 'bottom', 'above', 'below' ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is clicked.\n     */\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Whether to automatically open the menu when the control is focused.\n     */\n    openOnFocus: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Array of available options.\n     * @type {node[]}\n     */\n    options: {\n      type: Array,\n    },\n\n    /**\n     * Field placeholder, displayed when there's no value.\n     */\n    placeholder: {\n      type: String,\n      default: 'Select...',\n    },\n\n    /**\n     * Applies HTML5 required attribute when needed.\n     */\n    required: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text displayed asking user whether to retry loading children options.\n     */\n    retryText: {\n      type: String,\n      default: 'Retry?',\n    },\n\n    /**\n     * Title for the retry button.\n     */\n    retryTitle: {\n      type: String,\n      default: 'Click to retry',\n    },\n\n    /**\n     * Enable searching feature?\n     */\n    searchable: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * Search in ancestor nodes too.\n     */\n    searchNested: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Text tip to prompt for async search.\n     */\n    searchPromptText: {\n      type: String,\n      default: 'Type to search...',\n    },\n\n    /**\n     * Whether to show a children count next to the label of each branch node.\n     */\n    showCount: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Used in conjunction with `showCount` to specify which type of count number should be displayed.\n     * Acceptable values:\n     *   - \"ALL_CHILDREN\"\n     *   - \"ALL_DESCENDANTS\"\n     *   - \"LEAF_CHILDREN\"\n     *   - \"LEAF_DESCENDANTS\"\n     */\n    showCountOf: {\n      type: String,\n      default: ALL_CHILDREN,\n      validator(value) {\n        const acceptableValues = [ ALL_CHILDREN, ALL_DESCENDANTS, LEAF_CHILDREN, LEAF_DESCENDANTS ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Whether to show children count when searching.\n     * Fallbacks to the value of `showCount` when not specified.\n     * @type {boolean}\n     */\n    showCountOnSearch: null,\n\n    /**\n     * In which order the selected options should be displayed in trigger & sorted in `value` array.\n     * Used for multi-select mode only.\n     * Acceptable values:\n     *   - \"ORDER_SELECTED\"\n     *   - \"LEVEL\"\n     *   - \"INDEX\"\n     */\n    sortValueBy: {\n      type: String,\n      default: ORDER_SELECTED,\n      validator(value) {\n        const acceptableValues = [ ORDER_SELECTED, LEVEL, INDEX ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Tab index of the control.\n     */\n    tabIndex: {\n      type: Number,\n      default: 0,\n    },\n\n    /**\n     * The value of the control.\n     * Should be `id` or `node` object for single-select mode, or an array of `id` or `node` object for multi-select mode.\n     * Its format depends on the `valueFormat` prop.\n     * For most cases, just use `v-model` instead.\n     * @type {?Array}\n     */\n    modelValue: null,\n\n    /**\n     * Which kind of nodes should be included in the `value` array in multi-select mode.\n     * Acceptable values:\n     *   - \"ALL\" - Any node that is checked will be included in the `value` array\n     *   - \"BRANCH_PRIORITY\" (default) - If a branch node is checked, all its descendants will be excluded in the `value` array\n     *   - \"LEAF_PRIORITY\" - If a branch node is checked, this node itself and its branch descendants will be excluded from the `value` array but its leaf descendants will be included\n     *   - \"ALL_WITH_INDETERMINATE\" - Any node that is checked will be included in the `value` array, plus indeterminate nodes\n     */\n    valueConsistsOf: {\n      type: String,\n      default: BRANCH_PRIORITY,\n      validator(value) {\n        const acceptableValues = [ ALL, BRANCH_PRIORITY, LEAF_PRIORITY, ALL_WITH_INDETERMINATE ]\n        return includes(acceptableValues, value)\n      },\n    },\n\n    /**\n     * Format of `value` prop.\n     * Note that, when set to `\"object\"`, only `id` & `label` properties are required in each `node` object in `value` prop.\n     * Acceptable values:\n     *   - \"id\"\n     *   - \"object\"\n     */\n    valueFormat: {\n      type: String,\n      default: 'id',\n    },\n\n    /**\n     * z-index of the menu.\n     */\n    zIndex: {\n      type: [ Number, String ],\n      default: 999,\n    },\n  },\n\n  data() {\n    return {\n      key: 0,\n      trigger: {\n        // Is the control focused?\n        isFocused: false,\n        // User entered search query - value of the input.\n        searchQuery: '',\n      },\n\n      menu: {\n        // Is the menu opened?\n        isOpen: false,\n        // Id of current highlighted option.\n        current: null,\n        // The scroll position before last menu closing.\n        lastScrollPosition: 0,\n        // Which direction to open the menu.\n        placement: 'bottom',\n      },\n\n      forest: {\n        // Normalized options.\n        normalizedOptions: [],\n        // <id, node> map for quick look-up.\n        nodeMap: createMap(),\n        // <id, checkedState> map, used for multi-select mode.\n        checkedStateMap: createMap(),\n        // Id list of all selected options.\n        selectedNodeIds: this.extractCheckedNodeIdsFromValue(),\n        // <id, true> map for fast checking:\n        //   if (forest.selectedNodeIds.indexOf(id) !== -1) forest.selectedNodeMap[id] === true\n        selectedNodeMap: createMap(),\n      },\n\n      // States of root options.\n      rootOptionsStates: createAsyncOptionsStates(),\n\n      localSearch: {\n        // Has user entered any query to search local options?\n        active: false,\n        // Has any options matched the search query?\n        noResults: true,\n        // <id, countObject> map for counting matched children/descendants.\n        countMap: createMap(),\n      },\n\n      // <searchQuery, remoteSearchEntry> map.\n      remoteSearch: createMap(),\n    }\n  },\n\n  computed: {\n    /* eslint-disable valid-jsdoc */\n    /**\n     * Normalized nodes that have been selected.\n     * @type {node[]}\n     */\n    selectedNodes() {\n      return this.forest.selectedNodeIds.map(this.getNode)\n    },\n    /**\n     * Id list of selected nodes with `sortValueBy` prop applied.\n     * @type {nodeId[]}\n     */\n    internalValue() {\n      let internalValue\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        internalValue = this.forest.selectedNodeIds.slice()\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isRootNode) return true\n          return !this.isSelected(node.parentNode)\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        internalValue = this.forest.selectedNodeIds.filter(id => {\n          const node = this.getNode(id)\n          if (node.isLeaf) return true\n          return node.children.length === 0\n        })\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const indeterminateNodeIds = []\n        internalValue = this.forest.selectedNodeIds.slice()\n        this.selectedNodes.forEach(selectedNode => {\n          selectedNode.ancestors.forEach(ancestor => {\n            if (includes(indeterminateNodeIds, ancestor.id)) return\n            if (includes(internalValue, ancestor.id)) return\n            indeterminateNodeIds.push(ancestor.id)\n          })\n        })\n        internalValue.push(...indeterminateNodeIds)\n      }\n\n      if (this.sortValueBy === LEVEL) {\n        internalValue.sort((a, b) => sortValueByLevel(this.getNode(a), this.getNode(b)))\n      } else if (this.sortValueBy === INDEX) {\n        internalValue.sort((a, b) => sortValueByIndex(this.getNode(a), this.getNode(b)))\n      }\n\n      return internalValue\n    },\n    /**\n     * Has any option been selected?\n     * @type {boolean}\n     */\n    hasValue() {\n      return this.internalValue.length > 0\n    },\n    /**\n     * Single-select mode?\n     * @type {boolean}\n     */\n    single() {\n      return !this.multiple\n    },\n    /**\n     * Id list of nodes displayed in the menu. Nodes that are considered NOT visible:\n     *   - descendants of a collapsed branch node\n     *   - in local search mode, nodes that are not matched, unless\n     *       - it's a branch node and has matched descendants\n     *       - it's a leaf node and its parent node is explicitly set to show all children\n     * @type {id[]}\n     */\n    visibleOptionIds() {\n      const visibleOptionIds = []\n\n      this.traverseAllNodesByIndex(node => {\n        if (!this.localSearch.active || this.shouldOptionBeIncludedInSearchResult(node)) {\n          visibleOptionIds.push(node.id)\n        }\n        // Skip the traversal of descendants of a branch node if it's not expanded.\n        if (node.isBranch && !this.shouldExpand(node)) {\n          return false\n        }\n      })\n\n      return visibleOptionIds\n    },\n    /**\n     * Has any option should be displayed in the menu?\n     * @type {boolean}\n     */\n    hasVisibleOptions() {\n      return this.visibleOptionIds.length !== 0\n    },\n    /**\n     * Should show children count when searching?\n     * @type {boolean}\n     */\n    showCountOnSearchComputed() {\n      // Vue doesn't allow setting default prop value based on another prop value.\n      // So use computed property as a workaround.\n      // https://github.com/vuejs/vue/issues/6358\n      return typeof this.showCountOnSearch === 'boolean'\n        ? this.showCountOnSearch\n        : this.showCount\n    },\n    /**\n     * Is there any branch node?\n     * @type {boolean}\n     */\n    hasBranchNodes() {\n      return this.forest.normalizedOptions.some(rootNode => rootNode.isBranch)\n    },\n    shouldFlattenOptions() {\n      return this.localSearch.active && this.flattenSearchResults\n    },\n    /* eslint-enable valid-jsdoc */\n  },\n\n  watch: {\n    alwaysOpen(newValue) {\n      if (newValue) this.openMenu()\n      else this.closeMenu()\n    },\n\n    branchNodesFirst() {\n      this.initialize()\n    },\n\n    disabled(newValue) {\n      // force close the menu after disabling the control\n      if (newValue && this.menu.isOpen) this.closeMenu()\n      else if (!newValue && !this.menu.isOpen && this.alwaysOpen) this.openMenu()\n    },\n\n    flat() {\n      this.initialize()\n    },\n\n    internalValue(newValue, oldValue) {\n      const hasChanged = quickDiff(newValue, oldValue)\n      // #122\n      // Vue would trigger this watcher when `newValue` and `oldValue` are shallow-equal.\n      // We emit the `input` event only when the value actually changes.\n      if (hasChanged) this.$emit('update:modelValue', this.getValue(), this.getInstanceId())\n    },\n\n    matchKeys() {\n      this.initialize()\n    },\n\n    multiple(newValue) {\n      // We need to rebuild the state when switching from single-select mode\n      // to multi-select mode.\n      // istanbul ignore else\n      if (newValue) this.buildForestState()\n    },\n\n    options: {\n      handler() {\n        if (this.async) return\n        // Re-initialize options when the `options` prop has changed.\n        this.initialize()\n        this.rootOptionsStates.isLoaded = Array.isArray(this.options)\n      },\n      deep: true,\n      immediate: true,\n    },\n\n    'trigger.searchQuery'() {\n      if (this.async) {\n        this.handleRemoteSearch()\n      } else {\n        this.handleLocalSearch()\n      }\n\n      this.$emit('search-change', this.trigger.searchQuery, this.getInstanceId())\n    },\n\n    modelValue() {\n      const nodeIdsFromValue = this.extractCheckedNodeIdsFromValue()\n      const hasChanged = quickDiff(nodeIdsFromValue, this.internalValue)\n      if (hasChanged) this.fixSelectedNodeIds(nodeIdsFromValue)\n    },\n  },\n\n  methods: {\n    verifyProps() {\n      warning(\n        () => this.async ? this.searchable : true,\n        () => 'For async search mode, the value of \"searchable\" prop must be true.',\n      )\n\n      if (this.options == null && !this.loadOptions) {\n        warning(\n          () => false,\n          () => 'Are you meant to dynamically load options? You need to use \"loadOptions\" prop.',\n        )\n      }\n\n      if (this.flat) {\n        warning(\n          () => this.multiple,\n          () => 'You are using flat mode. But you forgot to add \"multiple=true\"?',\n        )\n      }\n\n      if (!this.flat) {\n        const propNames = [\n          'autoSelectAncestors',\n          'autoSelectDescendants',\n          'autoDeselectAncestors',\n          'autoDeselectDescendants',\n        ]\n\n        propNames.forEach(propName => {\n          warning(\n            () => !this[propName],\n            () => `\"${propName}\" only applies to flat mode.`,\n          )\n        })\n      }\n    },\n\n    resetFlags() {\n      this._blurOnSelect = false\n    },\n\n    initialize() {\n      const options = this.async\n        ? this.getRemoteSearchEntry().options\n        : this.options\n\n      if (Array.isArray(options)) {\n        // In case we are re-initializing options, keep the old state tree temporarily.\n        const prevNodeMap = this.forest.nodeMap\n        this.forest.nodeMap = createMap()\n        this.keepDataOfSelectedNodes(prevNodeMap)\n        this.forest.normalizedOptions = this.normalize(NO_PARENT_NODE, options, prevNodeMap)\n        // Cases that need fixing `selectedNodeIds`:\n        //   1) Children options of a checked node have been delayed loaded,\n        //      we should also mark these children as checked. (multi-select mode)\n        //   2) Root options have been delayed loaded, we need to initialize states\n        //      of these nodes. (multi-select mode)\n        //   3) Async search mode.\n        this.fixSelectedNodeIds(this.internalValue)\n      } else {\n        this.forest.normalizedOptions = []\n      }\n    },\n\n    getInstanceId() {\n      return this.instanceId == null ? this.id : this.instanceId\n    },\n\n    getValue() {\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.internalValue.slice()\n          : this.internalValue[0]\n      }\n\n      const rawNodes = this.internalValue.map(id => this.getNode(id).raw)\n      return this.multiple ? rawNodes : rawNodes[0]\n    },\n\n    getNode(nodeId) {\n      warning(\n        () => nodeId != null,\n        () => `Invalid node id: ${nodeId}`,\n      )\n\n      if (nodeId == null) return null\n\n      return nodeId in this.forest.nodeMap\n        ? this.forest.nodeMap[nodeId]\n        : this.createFallbackNode(nodeId)\n    },\n\n    createFallbackNode(id) {\n      // In case there is a default selected node that is not loaded into the tree yet,\n      // we create a fallback node to keep the component working.\n      // When the real data is loaded, we'll override this fake node.\n\n      const raw = this.extractNodeFromValue(id)\n      const label = this.enhancedNormalizer(raw).label || `${id} (unknown)`\n      const fallbackNode = {\n        id,\n        label,\n        ancestors: [],\n        parentNode: NO_PARENT_NODE,\n        isFallbackNode: true,\n        isRootNode: true,\n        isLeaf: true,\n        isBranch: false,\n        isDisabled: false,\n        isNew: false,\n        index: [ -1 ],\n        level: 0,\n        raw,\n      }\n\n      return this.forest.nodeMap[id] = fallbackNode\n      // return this.$ set(this.forest.nodeMap, id, fallbackNode)\n    },\n\n    extractCheckedNodeIdsFromValue() {\n      if (this.modelValue == null) return []\n\n      if (this.valueFormat === 'id') {\n        return this.multiple\n          ? this.modelValue.slice()\n          : [ this.modelValue ]\n      }\n\n      return (this.multiple ? this.modelValue : [ this.modelValue ])\n        .map(node => this.enhancedNormalizer(node))\n        .map(node => node.id)\n    },\n\n    extractNodeFromValue(id) {\n      const defaultNode = { id }\n\n      if (this.valueFormat === 'id') {\n        return defaultNode\n      }\n\n      const valueArray = this.multiple\n        ? Array.isArray(this.modelValue) ? this.modelValue : []\n        : this.modelValue ? [ this.modelValue ] : []\n      const matched = find(\n        valueArray,\n        node => node && this.enhancedNormalizer(node).id === id,\n      )\n\n      return matched || defaultNode\n    },\n\n    fixSelectedNodeIds(nodeIdListOfPrevValue) {\n      let nextSelectedNodeIds = []\n\n      // istanbul ignore else\n      if (this.single || this.flat || this.disableBranchNodes || this.valueConsistsOf === ALL) {\n        nextSelectedNodeIds = nodeIdListOfPrevValue\n      } else if (this.valueConsistsOf === BRANCH_PRIORITY) {\n        nodeIdListOfPrevValue.forEach(nodeId => {\n          nextSelectedNodeIds.push(nodeId)\n          const node = this.getNode(nodeId)\n          if (node.isBranch) this.traverseDescendantsBFS(node, descendant => {\n            nextSelectedNodeIds.push(descendant.id)\n          })\n        })\n      } else if (this.valueConsistsOf === LEAF_PRIORITY) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.slice()\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      } else if (this.valueConsistsOf === ALL_WITH_INDETERMINATE) {\n        const map = createMap()\n        const queue = nodeIdListOfPrevValue.filter(nodeId => {\n          const node = this.getNode(nodeId)\n          return node.isLeaf || node.children.length === 0\n        })\n        while (queue.length) {\n          const nodeId = queue.shift()\n          const node = this.getNode(nodeId)\n          nextSelectedNodeIds.push(nodeId)\n          if (node.isRootNode) continue\n          if (!(node.parentNode.id in map)) map[node.parentNode.id] = node.parentNode.children.length\n          if (--map[node.parentNode.id] === 0) queue.push(node.parentNode.id)\n        }\n      }\n\n      const hasChanged = quickDiff(this.forest.selectedNodeIds, nextSelectedNodeIds)\n      // If `nextSelectedNodeIds` doesn't actually differ from old `selectedNodeIds`,\n      // we don't make the assignment to avoid triggering its watchers which may cause\n      // unnecessary calculations.\n      if (hasChanged) this.forest.selectedNodeIds = nextSelectedNodeIds\n\n      this.buildForestState()\n    },\n\n    keepDataOfSelectedNodes(prevNodeMap) {\n      // In case there is any selected node that is not present in the new `options` array.\n      // It could be useful for async search mode.\n      this.forest.selectedNodeIds.forEach(id => {\n        if (!prevNodeMap[id]) return\n        const node = {\n          ...prevNodeMap[id],\n          isFallbackNode: true,\n        }\n        // this.$ set(this.forest.nodeMap, id, node)\n        this.forest.nodeMap[id] = node\n      })\n    },\n\n    isSelected(node) {\n      // whether a node is selected (single-select mode) or fully-checked (multi-select mode)\n      return node && this.forest.selectedNodeMap[node.id] === true\n    },\n\n    traverseDescendantsBFS(parentNode, callback) {\n      // istanbul ignore if\n      if (!parentNode.isBranch) return\n      const queue = parentNode.children.slice()\n      while (queue.length) {\n        const currNode = queue[0]\n        if (currNode.isBranch) queue.push(...currNode.children)\n        callback(currNode)\n        queue.shift()\n      }\n    },\n\n    traverseDescendantsDFS(parentNode, callback) {\n      if (!parentNode.isBranch) return\n      parentNode.children.forEach(child => {\n        // deep-level node first\n        this.traverseDescendantsDFS(child, callback)\n        callback(child)\n      })\n    },\n\n    traverseAllNodesDFS(callback) {\n      this.forest.normalizedOptions.forEach(rootNode => {\n        // deep-level node first\n        this.traverseDescendantsDFS(rootNode, callback)\n        callback(rootNode)\n      })\n    },\n\n    traverseAllNodesByIndex(callback) {\n      const walk = parentNode => {\n        parentNode.children.forEach(child => {\n          if (callback(child) !== false && child.isBranch) {\n            walk(child)\n          }\n        })\n      }\n\n      // To simplify the code logic of traversal,\n      // we create a fake root node that holds all the root options.\n      walk({ children: this.forest.normalizedOptions })\n    },\n\n    toggleClickOutsideEvent(enabled) {\n      if (enabled) {\n        document.addEventListener('mousedown', this.handleClickOutside, false)\n      } else {\n        document.removeEventListener('mousedown', this.handleClickOutside, false)\n      }\n    },\n\n    getValueContainer() {\n      return this.$refs?.control?.$refs['value-container']\n    },\n\n    getInput() {\n      return this.getValueContainer().$refs.input\n    },\n\n    focusInput() {\n      this.getInput().focus()\n    },\n\n    blurInput() {\n      this.getInput().blur()\n    },\n\n    handleMouseDown: onLeftClick(function handleMouseDown(evt) {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (this.disabled) return\n\n      const isClickedOnValueContainer = this.getValueContainer().$el.contains(evt.target)\n      if (isClickedOnValueContainer && !this.menu.isOpen && (this.openOnClick || this.trigger.isFocused)) {\n        this.openMenu()\n      }\n\n      if (this._blurOnSelect) {\n        this.blurInput()\n      } else {\n        // Focus the input or prevent blurring.\n        this.focusInput()\n      }\n\n      this.resetFlags()\n    }),\n\n    handleClickOutside(evt) {\n      // istanbul ignore else\n      if (this.$refs.wrapper && !this.$refs.wrapper.contains(evt.target)) {\n        this.blurInput()\n        this.closeMenu()\n      }\n    },\n\n    handleLocalSearch() {\n      const { searchQuery } = this.trigger\n      const done = () => this.resetHighlightedOptionWhenNecessary(true)\n\n      if (!searchQuery) {\n        // Exit sync search mode.\n        this.localSearch.active = false\n        return done()\n      }\n\n      // Enter sync search mode.\n      this.localSearch.active = true\n\n      // Reset states.\n      this.localSearch.noResults = true\n      this.traverseAllNodesDFS(node => {\n        if (node.isBranch) {\n          node.isExpandedOnSearch = false\n          node.showAllChildrenOnSearch = false\n          node.isMatched = false\n          node.hasMatchedDescendants = false\n\n          this.localSearch.countMap[node.id] = {\n            [ALL_CHILDREN]: 0,\n            [ALL_DESCENDANTS]: 0,\n            [LEAF_CHILDREN]: 0,\n            [LEAF_DESCENDANTS]: 0,\n          }\n\n          // this.$ set(this.localSearch.countMap, node.id, {\n          //   [ALL_CHILDREN]: 0,\n          //   [ALL_DESCENDANTS]: 0,\n          //   [LEAF_CHILDREN]: 0,\n          //   [LEAF_DESCENDANTS]: 0,\n          // })\n        }\n      })\n\n      const lowerCasedSearchQuery = searchQuery.trim().toLocaleLowerCase()\n      const splitSearchQuery = lowerCasedSearchQuery.replace(/\\s+/g, ' ').split(' ')\n      this.traverseAllNodesDFS(node => {\n        if (this.searchNested && splitSearchQuery.length > 1) {\n          node.isMatched = splitSearchQuery.every(filterValue =>\n            match(false, filterValue, node.nestedSearchLabel),\n          )\n        } else {\n          node.isMatched = this.matchKeys.some(matchKey =>\n            match(!this.disableFuzzyMatching, lowerCasedSearchQuery, node.lowerCased[matchKey]),\n          )\n        }\n\n        if (node.isMatched) {\n          this.localSearch.noResults = false\n          node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][ALL_DESCENDANTS]++)\n          if (node.isLeaf) node.ancestors.forEach(ancestor => this.localSearch.countMap[ancestor.id][LEAF_DESCENDANTS]++)\n          if (node.parentNode !== NO_PARENT_NODE) {\n            this.localSearch.countMap[node.parentNode.id][ALL_CHILDREN] += 1\n            // istanbul ignore else\n            if (node.isLeaf) this.localSearch.countMap[node.parentNode.id][LEAF_CHILDREN] += 1\n          }\n        }\n\n        if (\n          (node.isMatched || (node.isBranch && node.isExpandedOnSearch)) &&\n          node.parentNode !== NO_PARENT_NODE\n        ) {\n          node.parentNode.isExpandedOnSearch = true\n          node.parentNode.hasMatchedDescendants = true\n        }\n      })\n\n      done()\n    },\n\n    handleRemoteSearch() {\n      const { searchQuery } = this.trigger\n      const _this66 = this;\n      const entry = this.getRemoteSearchEntry()\n      const done = () => {\n        this.initialize()\n        this.resetHighlightedOptionWhenNecessary(true)\n      }\n\n      if ((searchQuery === '' || this.cacheOptions) && entry.isLoaded) {\n        return done()\n      }\n\n      this.callLoadOptionsProp({\n        action: ASYNC_SEARCH,\n        args: { searchQuery },\n        isPending() {\n          return entry.isLoading\n        },\n        start: () => {\n          entry.isLoading = true\n          entry.isLoaded = false\n          entry.loadingError = ''\n        },\n        succeed: options => {\n          entry.isLoaded = true\n          entry.options = options\n          // When the request completes, the search query may have changed.\n          // We only show these options if they are for the current search query.\n          if (this.trigger.searchQuery === searchQuery) done()\n        },\n        fail: err => {\n          entry.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          _this66.key += 1;\n          entry.isLoading = false\n        },\n      })\n    },\n\n    getRemoteSearchEntry() {\n      const { searchQuery } = this.trigger\n      const entry = this.remoteSearch[searchQuery] || {\n        ...createAsyncOptionsStates(),\n        options: [],\n      }\n\n      // Vue doesn't support directly watching on objects.\n      this.$watch(\n        () => entry.options,\n        () => {\n          // TODO: potential redundant re-initialization.\n          if (this.trigger.searchQuery === searchQuery) this.initialize()\n        },\n        { deep: true },\n      )\n\n      if (searchQuery === '') {\n        if (Array.isArray(this.defaultOptions)) {\n          entry.options = this.defaultOptions\n          entry.isLoaded = true\n          return entry\n        } else if (this.defaultOptions !== true) {\n          entry.isLoaded = true\n          return entry\n        }\n      }\n\n      if (!this.remoteSearch[searchQuery]) {\n        // this.$ set(this.remoteSearch, searchQuery, entry)\n        this.remoteSearch[searchQuery] = entry;\n      }\n\n      return entry\n    },\n\n    shouldExpand(node) {\n      return this.localSearch.active ? node.isExpandedOnSearch : node.isExpanded\n    },\n\n    shouldOptionBeIncludedInSearchResult(node) {\n      // 1) This option is matched.\n      if (node.isMatched) return true\n      // 2) This option is not matched, but has matched descendant(s).\n      if (node.isBranch && node.hasMatchedDescendants && !this.flattenSearchResults) return true\n      // 3) This option's parent has no matched descendants,\n      //    but after being expanded, all its children should be shown.\n      if (!node.isRootNode && node.parentNode.showAllChildrenOnSearch) return true\n      // 4) The default case.\n      return false\n    },\n\n    shouldShowOptionInMenu(node) {\n      if (this.localSearch.active && !this.shouldOptionBeIncludedInSearchResult(node)) {\n        return false\n      }\n      return true\n    },\n\n    getControl() {\n      return this.$refs.control?.$el\n    },\n\n    getMenu() {\n      const ref = this.appendToBody && this.$refs?.portal ? this.$refs.portal.portalTarget : this\n      const $menu = ref?.$refs?.menu?.$refs?.menu\n      return $menu && $menu.nodeName !== '#comment' ? $menu : null\n    },\n\n    setCurrentHighlightedOption(node, scroll = true) {\n      const prev = this.menu.current\n      if (prev != null && prev in this.forest.nodeMap) {\n        this.forest.nodeMap[prev].isHighlighted = false\n      }\n\n      if (!node) {\n        this.menu.current = null\n        return\n      }\n\n      this.menu.current = node.id\n      node.isHighlighted = true\n\n      if (this.menu.isOpen && scroll) {\n        const scrollToOption = () => {\n          const $menu = this.getMenu()\n          const $option = $menu.querySelector(`.vue-treeselect__option[data-id=\"${node.id}\"]`)\n          if ($option) scrollIntoView($menu, $option)\n        }\n\n        // In case `openMenu()` is just called and the menu is not rendered yet.\n        if (this.getMenu()) {\n          scrollToOption()\n        } else {\n          // istanbul ignore next\n          this.$nextTick(scrollToOption)\n        }\n      }\n    },\n\n    resetHighlightedOptionWhenNecessary(forceReset = false) {\n      const { current } = this.menu\n\n      if (\n        forceReset || current == null ||\n        !(current in this.forest.nodeMap) ||\n        !this.shouldShowOptionInMenu(this.getNode(current))\n      ) {\n        this.highlightFirstOption()\n      }\n    },\n\n    highlightFirstOption() {\n      if (!this.hasVisibleOptions) return\n\n      const first = this.visibleOptionIds[0]\n      this.setCurrentHighlightedOption(this.getNode(first))\n    },\n\n    highlightPrevOption() {\n      if (!this.hasVisibleOptions) return\n\n      const prev = this.visibleOptionIds.indexOf(this.menu.current) - 1\n      if (prev === -1) return this.highlightLastOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[prev]))\n    },\n\n    highlightNextOption() {\n      if (!this.hasVisibleOptions) return\n\n      const next = this.visibleOptionIds.indexOf(this.menu.current) + 1\n      if (next === this.visibleOptionIds.length) return this.highlightFirstOption()\n      this.setCurrentHighlightedOption(this.getNode(this.visibleOptionIds[next]))\n    },\n\n    highlightLastOption() {\n      if (!this.hasVisibleOptions) return\n\n      const last = getLast(this.visibleOptionIds)\n      this.setCurrentHighlightedOption(this.getNode(last))\n    },\n\n    resetSearchQuery() {\n      this.trigger.searchQuery = ''\n    },\n\n    closeMenu() {\n      if (!this.menu.isOpen || (!this.disabled && this.alwaysOpen)) return\n      this.saveMenuScrollPosition()\n      this.menu.isOpen = false\n      this.toggleClickOutsideEvent(false)\n      this.resetSearchQuery()\n      this.$emit('close', this.getValue(), this.getInstanceId())\n    },\n\n    openMenu() {\n      if (this.disabled || this.menu.isOpen) return\n      this.menu.isOpen = true\n      this.$nextTick(this.resetHighlightedOptionWhenNecessary)\n      this.$nextTick(this.restoreMenuScrollPosition)\n      if (!this.options && !this.async) this.loadRootOptions()\n      this.toggleClickOutsideEvent(true)\n      this.$emit('open', this.getInstanceId())\n    },\n\n    toggleMenu() {\n      if (this.menu.isOpen) {\n        this.closeMenu()\n      } else {\n        this.openMenu()\n      }\n    },\n\n    toggleExpanded(node) {\n      let nextState\n\n      if (this.localSearch.active) {\n        nextState = node.isExpandedOnSearch = !node.isExpandedOnSearch\n        if (nextState) node.showAllChildrenOnSearch = true\n      } else {\n        nextState = node.isExpanded = !node.isExpanded\n      }\n\n      if (nextState && !node.childrenStates.isLoaded) {\n        this.loadChildrenOptions(node)\n      }\n    },\n\n    buildForestState() {\n      const selectedNodeMap = createMap()\n      this.forest.selectedNodeIds.forEach(selectedNodeId => {\n        selectedNodeMap[selectedNodeId] = true\n      })\n      this.forest.selectedNodeMap = selectedNodeMap\n\n      const checkedStateMap = createMap()\n      if (this.multiple) {\n        this.traverseAllNodesByIndex(node => {\n          checkedStateMap[node.id] = UNCHECKED\n        })\n\n        this.selectedNodes.forEach(selectedNode => {\n          checkedStateMap[selectedNode.id] = CHECKED\n\n          if (!this.flat && !this.disableBranchNodes) {\n            selectedNode.ancestors.forEach(ancestorNode => {\n              if (!this.isSelected(ancestorNode)) {\n                checkedStateMap[ancestorNode.id] = INDETERMINATE\n              }\n            })\n          }\n        })\n      }\n      this.forest.checkedStateMap = checkedStateMap\n    },\n\n    enhancedNormalizer(raw) {\n      return {\n        ...raw,\n        ...this.normalizer(raw, this.getInstanceId()),\n      }\n    },\n\n    normalize(parentNode, nodes, prevNodeMap) {\n      let normalizedOptions = nodes\n        .map(node => [ this.enhancedNormalizer(node), node ])\n        .map(([ node, raw ], index) => {\n          this.checkDuplication(node)\n          this.verifyNodeShape(node)\n\n          const { id, label, children, isDefaultExpanded } = node\n          const isRootNode = parentNode === NO_PARENT_NODE\n          const level = isRootNode ? 0 : parentNode.level + 1\n          const isBranch = Array.isArray(children) || children === null\n          const isLeaf = !isBranch\n          const isDisabled = !!node.isDisabled || (!this.flat && !isRootNode && parentNode.isDisabled)\n          const isNew = !!node.isNew\n          const lowerCased = this.matchKeys.reduce((prev, key) => ({\n            ...prev,\n            [key]: stringifyOptionPropValue(node[key]).toLocaleLowerCase(),\n          }), {})\n          const nestedSearchLabel = isRootNode\n            ? lowerCased.label\n            : parentNode.nestedSearchLabel + ' ' + lowerCased.label\n\n          // this.$ set(this.forest.nodeMap, id, createMap())\n          this.forest.nodeMap[id] = createMap();\n\n          const normalized = this.forest.nodeMap[id];\n\n          normalized.id = id;\n          normalized.label = label;\n          normalized.level = level;\n          normalized.ancestors = isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors);\n          normalized.index = (isRootNode ? [] : parentNode.index).concat(index);\n          normalized.parentNode = parentNode;\n          normalized.lowerCased = lowerCased;\n          normalized.nestedSearchLabel = nestedSearchLabel;\n          normalized.isDisabled = isDisabled;\n          normalized.isNew = isNew;\n          normalized.isMatched = false;\n          normalized.isHighlighted = false;\n          normalized.isBranch = isBranch;\n          normalized.isLeaf = isLeaf;\n          normalized.isRootNode = isRootNode;\n          normalized.raw = raw;\n\n          // this.$ set(normalized, 'id', id)\n          // this.$ set(normalized, 'label', label)\n          // this.$ set(normalized, 'level', level)\n          // this.$ set(normalized, 'ancestors', isRootNode ? [] : [ parentNode ].concat(parentNode.ancestors))\n          // this.$ set(normalized, 'index', (isRootNode ? [] : parentNode.index).concat(index))\n          // this.$ set(normalized, 'parentNode', parentNode)\n          // this.$ set(normalized, 'lowerCased', lowerCased)\n          // this.$ set(normalized, 'nestedSearchLabel', nestedSearchLabel)\n          // this.$ set(normalized, 'isDisabled', isDisabled)\n          // this.$ set(normalized, 'isNew', isNew)\n          // this.$ set(normalized, 'isMatched', false)\n          // this.$ set(normalized, 'isHighlighted', false)\n          // this.$ set(normalized, 'isBranch', isBranch)\n          // this.$ set(normalized, 'isLeaf', isLeaf)\n          // this.$ set(normalized, 'isRootNode', isRootNode)\n          // this.$ set(normalized, 'raw', raw)\n\n          if (isBranch) {\n            const isLoaded = Array.isArray(children)\n\n            // this.$ set(normalized, 'childrenStates', {\n            //   ...createAsyncOptionsStates(),\n            //   isLoaded,\n            // })\n            normalized.childrenStates = {...createAsyncOptionsStates(),isLoaded}\n\n            // this.$ set(normalized, 'isExpanded', typeof isDefaultExpanded === 'boolean'\n            //   ? isDefaultExpanded\n            //   : level < this.defaultExpandLevel)\n            normalized.isExpanded = typeof isDefaultExpanded === 'boolean' ? isDefaultExpanded : level < this.defaultExpandLevel;\n\n            // this.$ set(normalized, 'hasMatchedDescendants', false)\n            // this.$ set(normalized, 'hasDisabledDescendants', false)\n            // this.$ set(normalized, 'isExpandedOnSearch', false)\n            // this.$ set(normalized, 'showAllChildrenOnSearch', false)\n            // this.$ set(normalized, 'count', {\n            //   [ALL_CHILDREN]: 0,\n            //   [ALL_DESCENDANTS]: 0,\n            //   [LEAF_CHILDREN]: 0,\n            //   [LEAF_DESCENDANTS]: 0,\n            // })\n            // this.$ set(normalized, 'children', isLoaded\n            //   ? this.normalize(normalized, children, prevNodeMap)\n            //   : [])\n            normalized.hasMatchedDescendants = false;\n            normalized.hasDisabledDescendants = false;\n            normalized.isExpandedOnSearch = false;\n            normalized.showAllChildrenOnSearch = false;\n            normalized.count = {\n              [ALL_CHILDREN]: 0,\n              [ALL_DESCENDANTS]: 0,\n              [LEAF_CHILDREN]: 0,\n              [LEAF_DESCENDANTS]: 0,\n            }\n\n            // this.$ set(normalized, 'children', isLoaded\n            //   ? this.normalize(normalized, children, prevNodeMap)\n            //   : [])\n            normalized.children = isLoaded ? this.normalize(normalized, children, prevNodeMap) :[];\n\n            if (isDefaultExpanded === true) normalized.ancestors.forEach(ancestor => {\n              ancestor.isExpanded = true\n            })\n\n            if (!isLoaded && typeof this.loadOptions !== 'function') {\n              warning(\n                () => false,\n                () => 'Unloaded branch node detected. \"loadOptions\" prop is required to load its children.',\n              )\n            } else if (!isLoaded && normalized.isExpanded) {\n              this.loadChildrenOptions(normalized)\n            }\n          }\n\n          normalized.ancestors.forEach(ancestor => ancestor.count[ALL_DESCENDANTS]++)\n          if (isLeaf) normalized.ancestors.forEach(ancestor => ancestor.count[LEAF_DESCENDANTS]++)\n          if (!isRootNode) {\n            parentNode.count[ALL_CHILDREN] += 1\n            if (isLeaf) parentNode.count[LEAF_CHILDREN] += 1\n            if (isDisabled) parentNode.hasDisabledDescendants = true\n          }\n\n          // Preserve previous states.\n          if (prevNodeMap && prevNodeMap[id]) {\n            const prev = prevNodeMap[id]\n\n            normalized.isMatched = prev.isMatched\n            normalized.showAllChildrenOnSearch = prev.showAllChildrenOnSearch\n            normalized.isHighlighted = prev.isHighlighted\n\n            if (prev.isBranch && normalized.isBranch) {\n              normalized.isExpanded = prev.isExpanded\n              normalized.isExpandedOnSearch = prev.isExpandedOnSearch\n              // #97\n              // If `isLoaded` was true, but IS NOT now, we consider this branch node\n              // to be reset to unloaded state by the user of this component.\n              if (prev.childrenStates.isLoaded && !normalized.childrenStates.isLoaded) {\n                // Make sure the node is collapsed, then the user can load its\n                // children again (by expanding).\n                normalized.isExpanded = false\n                // We have reset `childrenStates` and don't want to preserve states here.\n              } else {\n                normalized.childrenStates = { ...prev.childrenStates }\n              }\n            }\n          }\n\n          return normalized\n        })\n\n      if (this.branchNodesFirst) {\n        const branchNodes = normalizedOptions.filter(option => option.isBranch)\n        const leafNodes = normalizedOptions.filter(option => option.isLeaf)\n        normalizedOptions = branchNodes.concat(leafNodes)\n      }\n\n      return normalizedOptions\n    },\n\n    loadRootOptions() {\n      this.callLoadOptionsProp({\n        action: LOAD_ROOT_OPTIONS,\n        isPending: () => {\n          return this.rootOptionsStates.isLoading\n        },\n        start: () => {\n          this.rootOptionsStates.isLoading = true\n          this.rootOptionsStates.loadingError = ''\n        },\n        succeed: () => {\n          this.rootOptionsStates.isLoaded = true\n          // Wait for `options` being re-initialized.\n          this.$nextTick(() => {\n            this.resetHighlightedOptionWhenNecessary(true)\n          })\n        },\n        fail: err => {\n          this.rootOptionsStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.rootOptionsStates.isLoading = false\n        },\n      })\n    },\n\n    loadChildrenOptions(parentNode) {\n      // The options may be re-initialized anytime during the loading process.\n      // So `parentNode` can be stale and we use `getNode()` to avoid that.\n\n      const { id, raw } = parentNode\n\n      this.callLoadOptionsProp({\n        action: LOAD_CHILDREN_OPTIONS,\n        args: {\n          // We always pass the raw node instead of the normalized node to any\n          // callback provided by the user of this component.\n          // Because the shape of the raw node is more likely to be closing to\n          // what the back-end API service of the application needs.\n          parentNode: raw,\n        },\n        isPending: () => {\n          return this.getNode(id).childrenStates.isLoading\n        },\n        start: () => {\n          this.getNode(id).childrenStates.isLoading = true\n          this.getNode(id).childrenStates.loadingError = ''\n        },\n        succeed: () => {\n          this.getNode(id).childrenStates.isLoaded = true\n        },\n        fail: err => {\n          this.getNode(id).childrenStates.loadingError = getErrorMessage(err)\n        },\n        end: () => {\n          this.getNode(id).childrenStates.isLoading = false\n        },\n      })\n    },\n\n    callLoadOptionsProp({ action, args, isPending, start, succeed, fail, end }) {\n      if (!this.loadOptions || isPending()) {\n        return\n      }\n\n      start()\n\n      const callback = once((err, result) => {\n        if (err) {\n          fail(err)\n        } else {\n          succeed(result)\n        }\n\n        end()\n      })\n      const result = this.loadOptions({\n        id: this.getInstanceId(),\n        instanceId: this.getInstanceId(),\n        action,\n        ...args,\n        callback,\n      })\n\n      if (isPromise(result)) {\n        result.then(() => {\n          callback()\n        }, err => {\n          callback(err)\n        }).catch(err => {\n          // istanbul ignore next\n          console.error(err)\n        })\n      }\n    },\n\n    checkDuplication(node) {\n      warning(\n        () => !((node.id in this.forest.nodeMap) && !this.forest.nodeMap[node.id].isFallbackNode),\n        () => `Detected duplicate presence of node id ${JSON.stringify(node.id)}. ` +\n          `Their labels are \"${this.forest.nodeMap[node.id].label}\" and \"${node.label}\" respectively.`,\n      )\n    },\n\n    verifyNodeShape(node) {\n      warning(\n        () => !(node.children === undefined && node.isBranch === true),\n        () => 'Are you meant to declare an unloaded branch node? ' +\n          '`isBranch: true` is no longer supported, please use `children: null` instead.',\n      )\n    },\n\n    select(node) {\n      if (this.disabled || node.isDisabled) {\n        return\n      }\n\n      if (this.single) {\n        this.clear()\n      }\n\n      const nextState = this.multiple && !this.flat\n        ? this.forest.checkedStateMap[node.id] === UNCHECKED\n        : !this.isSelected(node)\n\n      if (nextState) {\n        this._selectNode(node)\n      } else {\n        this._deselectNode(node)\n      }\n\n      this.buildForestState()\n\n      this.$nextTick(() => {\n        if (nextState) {\n          this.$emit('select', node.raw, this.getInstanceId())\n        } else {\n          this.$emit('deselect', node.raw, this.getInstanceId())\n        }\n      })\n\n      if (this.localSearch.active && nextState && (this.single || this.clearOnSelect)) {\n        this.resetSearchQuery()\n      }\n\n      if (this.single && this.closeOnSelect) {\n        this.closeMenu()\n\n        // istanbul ignore else\n        if (this.searchable) {\n          this._blurOnSelect = true\n        }\n      }\n    },\n\n    clear() {\n      if (this.hasValue) {\n        if (this.single || this.allowClearingDisabled) {\n          this.forest.selectedNodeIds = []\n        } else /* if (this.multiple && !this.allowClearingDisabled) */ {\n          this.forest.selectedNodeIds = this.forest.selectedNodeIds.filter(nodeId =>\n            this.getNode(nodeId).isDisabled,\n          )\n        }\n\n        this.buildForestState()\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _selectNode(node) {\n      if (this.single || this.disableBranchNodes) {\n        return this.addValue(node)\n      }\n\n      if (this.flat) {\n        this.addValue(node)\n\n        if (this.autoSelectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (!this.isSelected(ancestor) && !ancestor.isDisabled) this.addValue(ancestor)\n          })\n        } else if (this.autoSelectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (!this.isSelected(descendant) && !descendant.isDisabled) this.addValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      const isFullyChecked = (\n        node.isLeaf ||\n        (/* node.isBranch && */!node.hasDisabledDescendants) ||\n        (/* node.isBranch && */this.allowSelectingDisabledDescendants)\n      )\n      if (isFullyChecked) {\n        this.addValue(node)\n      }\n\n      if (node.isBranch) {\n        this.traverseDescendantsBFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.addValue(descendant)\n          }\n        })\n      }\n\n      if (isFullyChecked) {\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (curr.children.every(this.isSelected)) this.addValue(curr)\n          else break\n        }\n      }\n    },\n\n    // This is meant to be called only by `select()`.\n    _deselectNode(node) {\n      if (this.disableBranchNodes) {\n        return this.removeValue(node)\n      }\n\n      if (this.flat) {\n        this.removeValue(node)\n\n        if (this.autoDeselectAncestors) {\n          node.ancestors.forEach(ancestor => {\n            if (this.isSelected(ancestor) && !ancestor.isDisabled) this.removeValue(ancestor)\n          })\n        } else if (this.autoDeselectDescendants) {\n          this.traverseDescendantsBFS(node, descendant => {\n            if (this.isSelected(descendant) && !descendant.isDisabled) this.removeValue(descendant)\n          })\n        }\n\n        return\n      }\n\n      let hasUncheckedSomeDescendants = false\n      if (node.isBranch) {\n        this.traverseDescendantsDFS(node, descendant => {\n          if (!descendant.isDisabled || this.allowSelectingDisabledDescendants) {\n            this.removeValue(descendant)\n            hasUncheckedSomeDescendants = true\n          }\n        })\n      }\n\n      if (\n        node.isLeaf ||\n        /* node.isBranch && */hasUncheckedSomeDescendants ||\n        /* node.isBranch && */node.children.length === 0\n      ) {\n        this.removeValue(node)\n\n        let curr = node\n        while ((curr = curr.parentNode) !== NO_PARENT_NODE) {\n          if (this.isSelected(curr)) this.removeValue(curr)\n          else break\n        }\n      }\n    },\n\n    addValue(node) {\n      this.forest.selectedNodeIds.push(node.id)\n      this.forest.selectedNodeMap[node.id] = true\n    },\n\n    removeValue(node) {\n      removeFromArray(this.forest.selectedNodeIds, node.id)\n      delete this.forest.selectedNodeMap[node.id]\n    },\n\n    removeLastValue() {\n      if (!this.hasValue) return\n      if (this.single) return this.clear()\n      const lastValue = getLast(this.internalValue)\n      const lastSelectedNode = this.getNode(lastValue)\n      this.select(lastSelectedNode) // deselect\n    },\n\n    saveMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) this.menu.lastScrollPosition = $menu.scrollTop\n    },\n\n    restoreMenuScrollPosition() {\n      const $menu = this.getMenu()\n      // istanbul ignore else\n      if ($menu) $menu.scrollTop = this.menu.lastScrollPosition\n    },\n  },\n\n  created() {\n    this.verifyProps()\n    this.resetFlags()\n  },\n\n  mounted() {\n    if (this.autoFocus) this.focusInput()\n    if (!this.options && !this.async && this.autoLoadRootOptions) this.loadRootOptions()\n    if (this.alwaysOpen) this.openMenu()\n    if (this.async && this.defaultOptions) this.handleRemoteSearch()\n  },\n\n  unmounted() {\n    // istanbul ignore next\n    this.toggleClickOutsideEvent(false)\n  },\n}\n","<script lang=\"jsx\">\n  import { isNaN } from '@/utils'\n  import { defineComponent } from 'vue';\n\n  function stringifyValue(value) {\n    if (typeof value === 'string') return value\n    // istanbul ignore else\n    if (value != null && !isNaN(value)) return JSON.stringify(value)\n    // istanbul ignore next\n    return ''\n  }\n\n  export default defineComponent({\n    name: 'vue-treeselect--hidden-fields',\n    inject: [ 'instance' ],\n    functional: true,\n\n    render(context) {\n      const instance = context.instance\n\n      if (!instance || !instance.name || instance.disabled || !instance.hasValue) return null\n\n      let stringifiedValues = instance.internalValue.map(stringifyValue)\n\n      if (instance.multiple && instance.joinValues) stringifiedValues = [\n        stringifiedValues.join(instance.delimiter),\n      ]\n\n      return stringifiedValues.map((stringifiedValue, i) => (\n        <input type=\"hidden\"\n          name={instance.name}\n          value={stringifiedValue}\n          key={'hidden-field-' + i}\n        />\n      ))\n    },\n  })\n</script>\n","<script lang=\"jsx\">\n  import { debounce, deepExtend, includes } from '@/utils'\n  import { MIN_INPUT_WIDTH, KEY_CODES, INPUT_DEBOUNCE_DELAY } from '@/constants'\n\n  const keysThatRequireMenuBeingOpen = [\n    KEY_CODES.ENTER,\n    KEY_CODES.END,\n    KEY_CODES.HOME,\n    KEY_CODES.ARROW_LEFT,\n    KEY_CODES.ARROW_UP,\n    KEY_CODES.ARROW_RIGHT,\n    KEY_CODES.ARROW_DOWN,\n  ]\n\n  export default {\n    name: 'vue-treeselect--input',\n    inject: [ 'instance' ],\n\n    data: () => ({\n      inputWidth: MIN_INPUT_WIDTH,\n      value: '',\n    }),\n\n    computed: {\n      needAutoSize() {\n        const { instance } = this\n\n        return (\n          instance.searchable &&\n          !instance.disabled &&\n          instance.multiple\n        )\n      },\n\n      inputStyle() {\n        return {\n          width: this.needAutoSize ? `${this.inputWidth}px` : null,\n        }\n      },\n    },\n\n    watch: {\n      'instance.trigger.searchQuery'(newValue) {\n        this.value = newValue\n      },\n\n      value() {\n        // istanbul ignore else\n        if (this.needAutoSize) this.$nextTick(this.updateInputWidth)\n      },\n    },\n\n    created() {\n      this.debouncedCallback = debounce(\n        this.updateSearchQuery,\n        INPUT_DEBOUNCE_DELAY,\n        { leading: true, trailing: true },\n      )\n    },\n\n    methods: {\n      clear() {\n        this.onInput({\n          target: { value: '' },\n        })\n      },\n\n      focus() {\n        const { instance } = this\n\n        if (!instance.disabled) {\n          this.$refs.input && this.$refs.input.focus()\n        }\n      },\n\n      blur() {\n        this.$refs.input && this.$refs.input.blur()\n      },\n\n      onFocus() {\n        const { instance } = this\n\n        instance.trigger.isFocused = true\n        // istanbul ignore else\n        if (instance.openOnFocus) instance.openMenu()\n      },\n\n      onBlur() {\n        const { instance } = this\n        const menu = instance.getMenu()\n\n        // #15\n        // istanbul ignore next\n        if (menu && document.activeElement === menu) {\n          return this.focus()\n        }\n\n        instance.trigger.isFocused = false\n        instance.closeMenu()\n      },\n\n      onInput(evt) {\n        const { value } = evt.target\n\n        this.value = value\n\n        if (value) {\n          this.debouncedCallback()\n        } else {\n          this.debouncedCallback.cancel()\n          this.updateSearchQuery()\n        }\n      },\n\n      // 用 keyUp 事件存在一个问题，删除输入框最后一个字符也会导致取消选中最后一项\n      onKeyDown(evt) {\n        const { instance } = this\n        // https://css-tricks.com/snippets/javascript/javascript-keycodes/\n        // https://stackoverflow.com/questions/4471582/javascript-keycode-vs-which\n        const key = 'which' in evt ? evt.which : /* istanbul ignore next */ evt.keyCode\n\n        if (evt.ctrlKey || evt.shiftKey || evt.altKey || evt.metaKey)\n          return\n\n        if (!instance.menu.isOpen && includes(keysThatRequireMenuBeingOpen, key)) {\n          evt.preventDefault()\n          return instance.openMenu()\n        }\n\n        switch (key) {\n        case KEY_CODES.BACKSPACE: {\n          if (instance.backspaceRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        case KEY_CODES.ENTER: {\n          evt.preventDefault()\n          if (instance.menu.current === null) return\n          const current = instance.getNode(instance.menu.current)\n          if (current.isBranch && instance.disableBranchNodes) return\n          instance.select(current)\n          break\n        }\n        case KEY_CODES.ESCAPE: {\n          if (this.value.length) {\n            this.clear()\n          } else if (instance.menu.isOpen) {\n            instance.closeMenu()\n          }\n          break\n        }\n        case KEY_CODES.END: {\n          evt.preventDefault()\n          instance.highlightLastOption()\n          break\n        }\n        case KEY_CODES.HOME: {\n          evt.preventDefault()\n          instance.highlightFirstOption()\n          break\n        }\n        case KEY_CODES.ARROW_LEFT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current) {\n            if (current.isBranch && instance.shouldExpand(current)) {\n              evt.preventDefault()\n              instance.toggleExpanded(current)\n            } else if (!current.isRootNode && (current.isLeaf || (current.isBranch && !(instance.shouldExpand(current))))) {\n              evt.preventDefault()\n              instance.setCurrentHighlightedOption(current.parentNode)\n            }\n          }\n          break\n        }\n        case KEY_CODES.ARROW_UP: {\n          evt.preventDefault()\n          instance.highlightPrevOption()\n          break\n        }\n        case KEY_CODES.ARROW_RIGHT: {\n          const current = instance.getNode(instance.menu.current)\n          if (current) {\n            if (current.isBranch && !instance.shouldExpand(current)) {\n              evt.preventDefault()\n              instance.toggleExpanded(current)\n            }\n          }\n          break\n        }\n        case KEY_CODES.ARROW_DOWN: {\n          evt.preventDefault()\n          instance.highlightNextOption()\n          break\n        }\n        case KEY_CODES.DELETE: {\n          if (instance.deleteRemoves && !this.value.length) {\n            instance.removeLastValue()\n          }\n          break\n        }\n        default: {\n          // istanbul ignore else\n          instance.openMenu()\n        }\n        }\n      },\n\n      onMouseDown(evt) {\n        // istanbul ignore next\n        if (this.value.length) {\n          // Prevent it from bubbling to the top level and triggering `preventDefault()`\n          // to make the textbox unselectable\n          evt.stopPropagation()\n        }\n      },\n\n      renderInputContainer() {\n        const { instance } = this\n        const props = {}\n        const children = []\n\n        if (instance.searchable && !instance.disabled) {\n          children.push(this.renderInput())\n          if (this.needAutoSize) children.push(this.renderSizer())\n        }\n\n        if (!instance.searchable) {\n          deepExtend(props, {\n            on: {\n              focus: this.onFocus,\n              blur: this.onBlur,\n              keydown: this.onKeyDown,\n            },\n            ref: 'input',\n          })\n        }\n\n        if (!instance.searchable && !instance.disabled) {\n          deepExtend(props, {\n            attrs: {\n              tabIndex: instance.tabIndex,\n            },\n          })\n        }\n\n        return (\n          <div class=\"vue-treeselect__input-container\" {...props}>\n            {children}\n          </div>\n        )\n      },\n\n      renderInput() {\n        const { instance } = this\n\n        return (\n          <input ref=\"input\"\n            class=\"vue-treeselect__input\"\n            type=\"text\"\n            autocomplete=\"off\"\n            tabIndex={instance.tabIndex}\n            required={instance.required && !instance.hasValue}\n            value={this.value}\n            style={this.inputStyle}\n            onFocus={this.onFocus}\n            onInput={this.onInput}\n            onBlur={this.onBlur}\n            onKeydown={this.onKeyDown}\n            onMousedown={this.onMouseDown}\n          />\n        )\n      },\n\n      renderSizer() {\n        return (\n          <div ref=\"sizer\" class=\"vue-treeselect__sizer\">{this.value}</div>\n        )\n      },\n\n      updateInputWidth() {\n        this.inputWidth = Math.max(\n          MIN_INPUT_WIDTH,\n          this.$refs.sizer.scrollWidth + 15,\n        )\n      },\n\n      updateSearchQuery() {\n        const { instance } = this\n\n        instance.trigger.searchQuery = this.value\n      },\n    },\n\n    render() {\n      return this.renderInputContainer()\n    },\n  }\n</script>\n","<script lang=\"jsx\">\n  export default {\n    name: 'vue-treeselect--placeholder',\n    inject: [ 'instance' ],\n\n    render() {\n      const { instance } = this\n      const placeholderClass = {\n        'vue-treeselect__placeholder': true,\n        'vue-treeselect-helper-zoom-effect-off': true,\n        'vue-treeselect-helper-hide': instance.hasValue || instance.trigger.searchQuery,\n      }\n\n      return (\n        <div class={placeholderClass}>\n          { instance.placeholder }\n        </div>\n      )\n    },\n  }\n</script>\n","<script lang=\"jsx\">\n  import Input from '@/components/Input.vue'\n  import Placeholder from '@/components/Placeholder.vue'\n\n  export default {\n    name: 'vue-treeselect--single-value',\n    inject: [ 'instance' ],\n    methods: {\n      renderSingleValueLabel() {\n        const { instance } = this\n        const node = instance.selectedNodes[0]\n\n        const customValueLabelRenderer = instance.$slots['value-label']\n        return customValueLabelRenderer\n          ? customValueLabelRenderer({ node })\n          : node.label\n      },\n    },\n    render() {\n      const { instance, $parent: { renderValueContainer } } = this\n      const shouldShowValue = instance.hasValue && !instance.trigger.searchQuery\n\n      return renderValueContainer([\n        shouldShowValue && (\n          <div class=\"vue-treeselect__single-value\">\n            { this.renderSingleValueLabel() }\n          </div>\n        ),\n        <Placeholder />,\n        <Input ref=\"input\" />,\n      ])\n    },\n  }\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 348.333 348.333\">\n    <path d=\"M336.559 68.611L231.016 174.165l105.543 105.549c15.699 15.705 15.699 41.145 0 56.85-7.844 7.844-18.128 11.769-28.407 11.769-10.296 0-20.581-3.919-28.419-11.769L174.167 231.003 68.609 336.563c-7.843 7.844-18.128 11.769-28.416 11.769-10.285 0-20.563-3.919-28.413-11.769-15.699-15.698-15.699-41.139 0-56.85l105.54-105.549L11.774 68.611c-15.699-15.699-15.699-41.145 0-56.844 15.696-15.687 41.127-15.687 56.829 0l105.563 105.554L279.721 11.767c15.705-15.687 41.139-15.687 56.832 0 15.705 15.699 15.705 41.145.006 56.844z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--x',\n  }\n</script>\n","<script lang=\"jsx\">\n  import { onLeftClick } from '@/utils'\n  import DeleteIcon from '@/components/icons/Delete.vue'\n\n  export default {\n    name: 'vue-treeselect--multi-value-item',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    methods: {\n      handleMouseDown: onLeftClick(function handleMouseDown() {\n        const { instance, node } = this\n\n        // Deselect this node.\n        instance.select(node)\n      }),\n    },\n\n    render() {\n      const { instance, node } = this\n      const itemClass = {\n        'vue-treeselect__multi-value-item': true,\n        'vue-treeselect__multi-value-item-disabled': node.isDisabled,\n        'vue-treeselect__multi-value-item-new': node.isNew,\n      }\n      const customValueLabelRenderer = instance.$slots['value-label']\n      const labelRenderer = customValueLabelRenderer ? customValueLabelRenderer({ node }) : node.label\n\n      return (\n        <div class=\"vue-treeselect__multi-value-item-container\">\n          <div class={itemClass} onMousedown={this.handleMouseDown}>\n            <span class=\"vue-treeselect__multi-value-label\">{ labelRenderer }</span>\n            <span class=\"vue-treeselect__icon vue-treeselect__value-remove\"><DeleteIcon /></span>\n          </div>\n        </div>\n      )\n    },\n  }\n</script>\n","<script lang=\"jsx\">\n  import MultiValueItem from '@/components/MultiValueItem.vue'\n  import Input from '@/components/Input.vue'\n  import Placeholder from '@/components/Placeholder.vue'\n\n  export default {\n    name: 'vue-treeselect--multi-value',\n    inject: [ 'instance' ],\n\n    methods: {\n      renderMultiValueItems() {\n        const { instance } = this\n\n        return instance.internalValue\n          .slice(0, instance.limit)\n          .map(instance.getNode)\n          .map(node => (\n            <MultiValueItem key={`multi-value-item-${node.id}`} node={node} />\n          ))\n      },\n\n      renderExceedLimitTip() {\n        const { instance } = this\n        const count = instance.internalValue.length - instance.limit\n\n        if (count <= 0) return null\n\n        return (\n          <div class=\"vue-treeselect__limit-tip vue-treeselect-helper-zoom-effect-off\" key=\"exceed-limit-tip\">\n            <span class=\"vue-treeselect__limit-tip-text\">{ instance.limitText(count) }</span>\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { renderValueContainer } = this.$parent\n      // const transitionGroupProps = {\n      //   props: {\n      //     tag: 'div',\n      //     name: 'vue-treeselect__multi-value-item--transition',\n      //     appear: true,\n      //   },\n      // }\n\n      return renderValueContainer(\n        <TransitionGroup class=\"vue-treeselect__multi-value\" tag=\"div\" name=\"vue-treeselect__multi-value-item--transition\" appear={true} >\n          {this.renderMultiValueItems()}\n          {this.renderExceedLimitTip()}\n          <Placeholder key=\"placeholder\" />\n          <Input ref=\"input\" key=\"input\" />\n        </TransitionGroup>,\n      )\n    },\n  }\n</script>\n","<template>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 292.362 292.362\">\n    <path d=\"M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.998 0 77.279 0 82.228c0 4.948 1.807 9.229 5.424 12.847l127.907 127.907c3.621 3.617 7.902 5.428 12.85 5.428s9.233-1.811 12.847-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.229-5.427-12.85z\" />\n  </svg>\n</template>\n\n<script>\n  export default {\n    name: 'vue-treeselect--arrow',\n  }\n</script>\n","<script lang=\"jsx\">\n  import { onLeftClick, isPromise } from '@/utils'\n  import SingleValue from '@/components/SingleValue.vue'\n  import MultiValue from '@/components/MultiValue.vue'\n  import DeleteIcon from '@/components/icons/Delete.vue'\n  import ArrowIcon from '@/components/icons/Arrow.vue'\n\n  export default {\n    name: 'vue-treeselect--control',\n    inject: [ 'instance' ],\n\n    computed: {\n      /* eslint-disable valid-jsdoc */\n      /**\n       * Should show the \"×\" button that resets value?\n       * @return {boolean}\n       */\n      shouldShowX() {\n        const { instance } = this\n\n        return (\n          instance.clearable &&\n          !instance.disabled &&\n          instance.hasValue &&\n          (this.hasUndisabledValue || instance.allowClearingDisabled)\n        )\n      },\n\n      /**\n       * Should show the arrow button that toggles menu?\n       * @return {boolean}\n       */\n      shouldShowArrow() {\n        const { instance } = this\n\n        if (!instance.alwaysOpen) return true\n        // Even with `alwaysOpen: true`, sometimes the menu is still closed,\n        // e.g. when the control is disabled.\n        return !instance.menu.isOpen\n      },\n\n      /**\n       * Has any undisabled option been selected?\n       * @type {boolean}\n       */\n      hasUndisabledValue() {\n        const { instance } = this\n\n        return (\n          instance.hasValue &&\n          instance.internalValue.some(id => !instance.getNode(id).isDisabled)\n        )\n      },\n      /* eslint-enable valid-jsdoc */\n    },\n\n    methods: {\n      renderX() {\n        const { instance } = this\n        const title = instance.multiple ? instance.clearAllText : instance.clearValueText\n\n        if (!this.shouldShowX) return null\n\n        return (\n          <div class=\"vue-treeselect__x-container\" title={title} onMousedown={this.handleMouseDownOnX}>\n            <DeleteIcon class=\"vue-treeselect__x\" />\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance } = this\n        const arrowClass = {\n          'vue-treeselect__control-arrow': true,\n          'vue-treeselect__control-arrow--rotated': instance.menu.isOpen,\n        }\n\n        if (!this.shouldShowArrow) return null\n\n        return (\n          <div class=\"vue-treeselect__control-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n            <ArrowIcon class={arrowClass} />\n          </div>\n        )\n      },\n\n      handleMouseDownOnX: onLeftClick(function handleMouseDownOnX(evt) {\n        /**\n         * We don't use async/await here because we don't want\n         * to rely on Babel polyfill or regenerator runtime.\n         * See: https://babeljs.io/docs/plugins/transform-regenerator/\n         * We also don't want to assume there is a global `Promise`\n         * class, since we are targeting to support IE9 without the\n         * need of any polyfill.\n         */\n\n        evt.stopPropagation()\n        evt.preventDefault()\n\n        const { instance } = this\n        const result = instance.beforeClearAll()\n        const handler = shouldClear => {\n          if (shouldClear) instance.clear()\n        }\n\n        if (isPromise(result)) {\n          // The handler will be called async.\n          result.then(handler)\n        } else {\n          // Keep the same behavior here.\n          setTimeout(() => handler(result), 0)\n          // Also, note that IE9 requires:\n          //   setTimeout(() => fn(...args), delay)\n          // Instead of:\n          //   setTimeout(fn, delay, ...args)\n        }\n      }),\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnArrow(evt) {\n        evt.preventDefault()\n        evt.stopPropagation()\n\n        const { instance } = this\n\n        // Focus the input or prevent blurring.\n        instance.focusInput()\n        instance.toggleMenu()\n      }),\n\n      // This is meant to be called by child `<Value />` component.\n      renderValueContainer(children) {\n        return (\n          <div class=\"vue-treeselect__value-container\">\n            {children}\n          </div>\n        )\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const ValueContainer = instance.single ? SingleValue : MultiValue\n\n      return (\n        <div class=\"vue-treeselect__control\" onMousedown={instance.handleMouseDown}>\n          <ValueContainer ref=\"value-container\" />\n          {this.renderX()}\n          {this.renderArrow()}\n        </div>\n      )\n    },\n  }\n</script>\n","<script lang=\"jsx\">\n  import {defineComponent} from 'vue';\n  export default defineComponent({\n    name: 'vue-treeselect--tip',\n    functional: true,\n\n    props: {\n      type: {\n        type: String,\n        required: true,\n      },\n      icon: {\n        type: String,\n        required: true,\n      },\n    },\n\n    render(context) {\n      const { type,icon } = this\n\n      return (\n        <div class={`vue-treeselect__tip vue-treeselect__${type}-tip`}>\n          <div class=\"vue-treeselect__icon-container\">\n            <span class={`vue-treeselect__icon-${icon}`} />\n          </div>\n          <span class={`vue-treeselect__tip-text vue-treeselect__${type}-tip-text`}>\n            {this.$slots.default()}\n          </span>\n        </div>\n      )\n    },\n  })\n</script>\n","<script lang=\"jsx\">\n  import { UNCHECKED, INDETERMINATE, CHECKED } from '@/constants'\n  import { onLeftClick } from '@/utils'\n  import Tip from '@/components/Tip.vue'\n  import ArrowIcon from '@/components/icons/Arrow.vue'\n\n  let arrowPlaceholder, checkMark, minusMark\n\n  const Option = {\n    name: 'vue-treeselect--option',\n    inject: [ 'instance' ],\n\n    props: {\n      node: {\n        type: Object,\n        required: true,\n      },\n    },\n\n    computed: {\n      shouldExpand() {\n        const { instance, node } = this\n\n        return node.isBranch && instance.shouldExpand(node)\n      },\n\n      shouldShow() {\n        const { instance, node } = this\n        return instance.shouldShowOptionInMenu(node)\n      },\n    },\n\n    methods: {\n      renderOption() {\n        const { instance, node } = this\n        const optionClass = {\n          'vue-treeselect__option': true,\n          'vue-treeselect__option--disabled': node.isDisabled,\n          'vue-treeselect__option--selected': instance.isSelected(node),\n          'vue-treeselect__option--highlight': node.isHighlighted,\n          'vue-treeselect__option--matched': instance.localSearch.active && node.isMatched,\n          'vue-treeselect__option--hide': !this.shouldShow,\n        }\n\n        return (\n          <div class={optionClass} onMouseenter={this.handleMouseEnterOption} data-id={node.id}>\n            {this.renderArrow()}\n            {this.renderLabelContainer([\n              this.renderCheckboxContainer([\n                this.renderCheckbox(),\n              ]),\n              this.renderLabel(),\n            ])}\n          </div>\n        )\n      },\n\n      renderSubOptionsList() {\n        if (!this.shouldExpand) return null\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {this.renderSubOptions()}\n            {this.renderNoChildrenTip()}\n            {this.renderLoadingChildrenTip()}\n            {this.renderLoadingChildrenErrorTip()}\n          </div>\n        )\n      },\n\n      renderArrow() {\n        const { instance, node } = this\n\n        if (instance.shouldFlattenOptions && this.shouldShow) return null\n        if (node.isBranch) {\n\n          const arrowClass = {\n            'vue-treeselect__option-arrow': true,\n            'vue-treeselect__option-arrow--rotated': this.shouldExpand,\n          }\n\n          return (\n            <div class=\"vue-treeselect__option-arrow-container\" onMousedown={this.handleMouseDownOnArrow}>\n              <Transition name=\"vue-treeselect__option-arrow--prepare\" appear={true}>\n                <ArrowIcon class={arrowClass} />\n              </Transition>\n            </div>\n          )\n        }\n\n        // For leaf nodes, we render a placeholder to keep its label aligned to\n        // branch nodes. Unless there is no branch nodes at all (a normal\n        // non-tree select).\n        if (/*node.isLeaf && */instance.hasBranchNodes) {\n          if (!arrowPlaceholder) arrowPlaceholder = (\n            <div class=\"vue-treeselect__option-arrow-placeholder\">&nbsp;</div>\n          )\n\n          return arrowPlaceholder\n        }\n\n        return null\n      },\n\n      renderLabelContainer(children) {\n        return (\n          <div class=\"vue-treeselect__label-container\" onMousedown={this.handleMouseDownOnLabelContainer}>\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckboxContainer(children) {\n        const { instance, node } = this\n\n        if (instance.single) return null\n        if (instance.disableBranchNodes && node.isBranch) return null\n\n        return (\n          <div class=\"vue-treeselect__checkbox-container\">\n            {children}\n          </div>\n        )\n      },\n\n      renderCheckbox() {\n        const { instance, node } = this\n        const checkedState = instance.forest.checkedStateMap[node.id]\n        const checkboxClass = {\n          'vue-treeselect__checkbox': true,\n          'vue-treeselect__checkbox--checked': checkedState === CHECKED,\n          'vue-treeselect__checkbox--indeterminate': checkedState === INDETERMINATE,\n          'vue-treeselect__checkbox--unchecked': checkedState === UNCHECKED,\n          'vue-treeselect__checkbox--disabled': node.isDisabled,\n        }\n\n        if (!checkMark) checkMark = (\n          <span class=\"vue-treeselect__check-mark\" />\n        )\n        if (!minusMark) minusMark = (\n          <span class=\"vue-treeselect__minus-mark\" />\n        )\n\n        return (\n          <span class={checkboxClass}>\n            {checkMark}\n            {minusMark}\n          </span>\n        )\n      },\n\n      renderLabel() {\n        const { instance, node } = this\n        const shouldShowCount = (\n          node.isBranch && (instance.localSearch.active\n            ? instance.showCountOnSearchComputed\n            : instance.showCount\n          )\n        )\n        const count = shouldShowCount\n          ? instance.localSearch.active\n            ? instance.localSearch.countMap[node.id][instance.showCountOf]\n            : node.count[instance.showCountOf]\n          : NaN\n        const labelClassName = 'vue-treeselect__label'\n        const countClassName = 'vue-treeselect__count'\n        const customLabelRenderer = instance.$slots['option-label']\n\n        if (customLabelRenderer) return customLabelRenderer({\n          node,\n          shouldShowCount,\n          count,\n          labelClassName,\n          countClassName,\n        })\n        return (\n          <label class={labelClassName}>\n            {node.label}\n            {shouldShowCount && (\n              <span class={countClassName}>({count})</span>\n            )}\n          </label>\n        )\n      },\n\n      renderSubOptions() {\n        const { node } = this\n        \n        if (!node.childrenStates.isLoaded) return null\n\n        return node.children.map(childNode => (\n          <vue-treeselect--option node={childNode} key={childNode.id} />\n        ))\n\n      },\n\n      renderNoChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoaded || node.children.length) return null\n\n        return (\n          <Tip type=\"no-children\" icon=\"warning\">{ instance.noChildrenText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.isLoading) return null\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingChildrenErrorTip() {\n        const { instance, node } = this\n\n        if (!node.childrenStates.loadingError) return null\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { node.childrenStates.loadingError }\n            <a class=\"vue-treeselect__retry\" title={instance.retryTitle} onMousedown={this.handleMouseDownOnRetry}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      handleMouseEnterOption(evt) {\n        const { instance, node } = this\n\n        // Equivalent to `self` modifier.\n        // istanbul ignore next\n        if (evt.target !== evt.currentTarget) return\n\n        instance.setCurrentHighlightedOption(node, false)\n      },\n\n      handleMouseDownOnArrow: onLeftClick(function handleMouseDownOnOptionArrow() {\n        const { instance, node } = this\n        instance.toggleExpanded(node)\n      }),\n\n      handleMouseDownOnLabelContainer: onLeftClick(function handleMouseDownOnLabelContainer() {\n        const { instance, node } = this\n\n        if (node.isBranch && instance.disableBranchNodes) {\n          instance.toggleExpanded(node)\n        } else {\n          instance.select(node)\n        }\n      }),\n\n      handleMouseDownOnRetry: onLeftClick(function handleMouseDownOnRetry() {\n        const { instance, node } = this\n        instance.loadChildrenOptions(node)\n      }),\n    },\n\n    render() {\n      const { node } = this\n      const indentLevel = this.instance.shouldFlattenOptions ? 0 : node.level\n      const listItemClass = {\n        'vue-treeselect__list-item': true,\n        [`vue-treeselect__indent-level-${indentLevel}`]: true,\n      }\n\n      return (\n        <div class={listItemClass}>\n          {this.renderOption()}\n          {node.isBranch ? (\n            <Transition name=\"vue-treeselect__list--transition\">\n              {this.renderSubOptionsList()}\n            </Transition>\n          ) : ''}\n        </div>\n      )\n    },\n  }\n\n  // eslint-disable-next-line vue/require-direct-export\n  export default Option\n</script>","<script lang=\"jsx\">\n  import { MENU_BUFFER } from '@/constants'\n  import { watchSize, setupResizeAndScrollEventListeners } from '@/utils'\n  import Option from '@/components/Option.vue'\n  import Tip from '@/components/Tip.vue'\n\n  const directionMap = {\n    top: 'top',\n    bottom: 'bottom',\n    above: 'top',\n    below: 'bottom',\n  }\n\n  export default {\n    name: 'vue-treeselect--menu',\n    inject: [ 'instance' ],\n\n    computed: {\n      menuStyle() {\n        const { instance } = this\n\n        return {\n          maxHeight: instance.maxHeight + 'px',\n        }\n      },\n\n      menuContainerStyle() {\n        const { instance } = this\n\n        return {\n          zIndex: instance.appendToBody ? null : instance.zIndex,\n        }\n      },\n    },\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          // In case `openMenu()` is just called and the menu is not rendered yet.\n          this.$nextTick(this.onMenuOpen)\n        } else {\n          this.onMenuClose()\n        }\n      },\n    },\n\n    created() {\n      this.menuSizeWatcher = null\n      this.menuResizeAndScrollEventListeners = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.$nextTick(this.onMenuOpen)\n    },\n\n    unmounted() {\n      this.onMenuClose()\n    },\n\n    methods: {\n      renderMenu() {\n        const { instance } = this\n\n        if (!instance.menu.isOpen) return null\n\n        return (\n          <div key={instance.key} ref=\"menu\" class=\"vue-treeselect__menu\" onMousedown={instance.handleMouseDown} style={this.menuStyle}>\n            {this.renderBeforeList()}\n            {instance.async\n              ? this.renderAsyncSearchMenuInner()\n              : instance.localSearch.active\n                ? this.renderLocalSearchMenuInner()\n                : this.renderNormalMenuInner()}\n            {this.renderAfterList()}\n          </div>\n        )\n      },\n\n      renderBeforeList() {\n        const { instance } = this\n        const beforeListRenderer = instance.$slots['before-list']\n\n        return beforeListRenderer\n          ? beforeListRenderer()\n          : null\n      },\n\n      renderAfterList() {\n        const { instance } = this\n        const afterListRenderer = instance.$slots['after-list']\n\n        return afterListRenderer\n          ? afterListRenderer()\n          : null\n      },\n\n      renderNormalMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderLocalSearchMenuInner() {\n        const { instance } = this\n\n        if (instance.rootOptionsStates.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (instance.rootOptionsStates.loadingError) {\n          return this.renderLoadingRootOptionsErrorTip()\n        } else if (instance.rootOptionsStates.isLoaded && instance.forest.normalizedOptions.length === 0) {\n          return this.renderNoAvailableOptionsTip()\n        } else if (instance.localSearch.noResults) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderAsyncSearchMenuInner() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n        const shouldShowSearchPromptTip = instance.trigger.searchQuery === '' && !instance.defaultOptions\n        const shouldShowNoResultsTip = shouldShowSearchPromptTip\n          ? false\n          : entry.isLoaded && entry.options.length === 0\n\n        if (shouldShowSearchPromptTip) {\n          return this.renderSearchPromptTip()\n        } else if (entry.isLoading) {\n          return this.renderLoadingOptionsTip()\n        } else if (entry.loadingError) {\n          return this.renderAsyncSearchLoadingErrorTip()\n        } else if (shouldShowNoResultsTip) {\n          return this.renderNoResultsTip()\n        } else {\n          return this.renderOptionList()\n        }\n      },\n\n      renderOptionList() {\n        const { instance } = this\n\n        return (\n          <div class=\"vue-treeselect__list\">\n            {instance.forest.normalizedOptions.map(rootNode => (\n              <Option node={rootNode} key={rootNode.id} />\n            ))}\n          </div>\n        )\n      },\n\n      renderSearchPromptTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"search-prompt\" icon=\"warning\">{ instance.searchPromptText }</Tip>\n        )\n      },\n\n      renderLoadingOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"loading\" icon=\"loader\">{ instance.loadingText }</Tip>\n        )\n      },\n\n      renderLoadingRootOptionsErrorTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { instance.rootOptionsStates.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.loadRootOptions} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderAsyncSearchLoadingErrorTip() {\n        const { instance } = this\n        const entry = instance.getRemoteSearchEntry()\n\n        // TODO: retryTitle?\n\n        return (\n          <Tip type=\"error\" icon=\"error\">\n            { entry.loadingError }\n            <a class=\"vue-treeselect__retry\" onClick={instance.handleRemoteSearch} title={instance.retryTitle}>\n              { instance.retryText }\n            </a>\n          </Tip>\n        )\n      },\n\n      renderNoAvailableOptionsTip() {\n        const { instance } = this\n\n        return (\n          <Tip type=\"no-options\" icon=\"warning\">{ instance.noOptionsText }</Tip>\n        )\n      },\n\n      renderNoResultsTip() {\n        const { instance } = this\n        return (\n          <Tip type=\"no-results\" icon=\"warning\">{ instance.noResultsText }</Tip>\n        )\n      },\n\n      onMenuOpen() {\n        this.adjustMenuOpenDirection()\n        this.setupMenuSizeWatcher()\n        this.setupMenuResizeAndScrollEventListeners()\n      },\n\n      onMenuClose() {\n        this.removeMenuSizeWatcher()\n        this.removeMenuResizeAndScrollEventListeners()\n      },\n\n      adjustMenuOpenDirection() {\n        const { instance } = this\n        if (!instance.menu.isOpen) return\n\n        const $menu = instance.getMenu()\n        const $control = instance.getControl()\n        const menuRect = $menu.getBoundingClientRect()\n        const controlRect = $control.getBoundingClientRect()\n        const menuHeight = menuRect.height\n        const viewportHeight = window.innerHeight\n        const spaceAbove = controlRect.top\n        const spaceBelow = window.innerHeight - controlRect.bottom\n        const isControlInViewport = (\n          (controlRect.top >= 0 && controlRect.top <= viewportHeight) ||\n          (controlRect.top < 0 && controlRect.bottom > 0)\n        )\n        const hasEnoughSpaceBelow = spaceBelow > menuHeight + MENU_BUFFER\n        const hasEnoughSpaceAbove = spaceAbove > menuHeight + MENU_BUFFER\n\n        if (!isControlInViewport) {\n          instance.closeMenu()\n        } else if (instance.openDirection !== 'auto') {\n          instance.menu.placement = directionMap[instance.openDirection]\n        } else if (hasEnoughSpaceBelow || !hasEnoughSpaceAbove) {\n          instance.menu.placement = 'bottom'\n        } else {\n          instance.menu.placement = 'top'\n        }\n      },\n\n      setupMenuSizeWatcher() {\n        const { instance } = this\n        const $menu = instance.getMenu()\n\n        // istanbul ignore next\n        if (this.menuSizeWatcher) return\n\n        this.menuSizeWatcher = {\n          remove: watchSize($menu, this.adjustMenuOpenDirection),\n        }\n      },\n\n      setupMenuResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.adjustMenuOpenDirection),\n        }\n      },\n\n      removeMenuSizeWatcher() {\n        if (!this.menuSizeWatcher) return\n\n        this.menuSizeWatcher.remove()\n        this.menuSizeWatcher = null\n      },\n\n      removeMenuResizeAndScrollEventListeners() {\n        if (!this.menuResizeAndScrollEventListeners) return\n\n        this.menuResizeAndScrollEventListeners.remove()\n        this.menuResizeAndScrollEventListeners = null\n      },\n    },\n\n    render() {\n      return (\n        <div ref=\"menu-container\" class=\"vue-treeselect__menu-container\" style={this.menuContainerStyle}>\n          <Transition name=\"vue-treeselect__menu--transition\">\n            {this.renderMenu()}\n          </Transition>\n        </div>\n      )\n    },\n  }\n</script>\n","<script lang=\"jsx\">\n  import { createApp } from 'vue'\n  import { watchSize, setupResizeAndScrollEventListeners, find } from '@/utils'\n  import Menu from '@/components/Menu.vue'\n\n  const PortalTarget = {\n    name: 'vue-treeselect--portal-target',\n    inject: [ 'instance' ],\n\n    watch: {\n      'instance.menu.isOpen'(newValue) {\n        if (newValue) {\n          this.setupHandlers()\n        } else {\n          this.removeHandlers()\n        }\n      },\n\n      'instance.menu.placement'() {\n        this.updateMenuContainerOffset()\n      },\n    },\n\n    created() {\n      this.controlResizeAndScrollEventListeners = null\n      this.controlSizeWatcher = null\n    },\n\n    mounted() {\n      const { instance } = this\n\n      if (instance.menu.isOpen) this.setupHandlers()\n    },\n\n    methods: {\n      setupHandlers() {\n        this.updateWidth()\n        this.updateMenuContainerOffset()\n        this.setupControlResizeAndScrollEventListeners()\n        this.setupControlSizeWatcher()\n      },\n\n      removeHandlers() {\n        this.removeControlResizeAndScrollEventListeners()\n        this.removeControlSizeWatcher()\n      },\n\n      setupControlResizeAndScrollEventListeners() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners = {\n          remove: setupResizeAndScrollEventListeners($control, this.updateMenuContainerOffset),\n        }\n      },\n\n      setupControlSizeWatcher() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        // istanbul ignore next\n        if (this.controlSizeWatcher) return\n\n        this.controlSizeWatcher = {\n          remove: watchSize($control, () => {\n            this.updateWidth()\n            this.updateMenuContainerOffset()\n          }),\n        }\n      },\n\n      removeControlResizeAndScrollEventListeners() {\n        if (!this.controlResizeAndScrollEventListeners) return\n\n        this.controlResizeAndScrollEventListeners.remove()\n        this.controlResizeAndScrollEventListeners = null\n      },\n\n      removeControlSizeWatcher() {\n        if (!this.controlSizeWatcher) return\n\n        this.controlSizeWatcher.remove()\n        this.controlSizeWatcher = null\n      },\n\n      updateWidth() {\n        const { instance } = this\n        const $portalTarget = this.$el\n        const $control = instance.getControl()\n        const controlRect = $control.getBoundingClientRect()\n\n        $portalTarget.style.width = controlRect.width + 'px'\n      },\n\n      updateMenuContainerOffset() {\n        const { instance } = this\n        const $control = instance.getControl()\n\n        if (!$control) {\n          return\n        }\n\n        const $portalTarget = this.$el\n        const controlRect = $control.getBoundingClientRect()\n        const portalTargetRect = $portalTarget.getBoundingClientRect()\n        const offsetY = instance.menu.placement === 'bottom' ? controlRect.height : 0\n        const left = Math.round(controlRect.left - portalTargetRect.left) + 'px'\n        const top = Math.round(controlRect.top - portalTargetRect.top + offsetY) + 'px'\n        const menuContainerStyle = this.$refs?.menu?.$refs['menu-container'].style\n        const transformVariations = [ 'transform', 'webkitTransform', 'MozTransform', 'msTransform' ]\n        const transform = find(transformVariations, t => t in document.body.style)\n\n        // IE9 doesn't support `translate3d()`.\n        if (menuContainerStyle) {\n          menuContainerStyle[transform] = `translate(${left}, ${top})`\n        }\n      },\n    },\n\n    render() {\n      const { instance } = this\n      const portalTargetClass = [ 'vue-treeselect__portal-target', instance.wrapperClass ]\n      const portalTargetStyle = { zIndex: instance.zIndex }\n\n      return (\n        <div class={portalTargetClass} style={portalTargetStyle} data-instance-id={instance.getInstanceId()}>\n          <Menu ref=\"menu\" />\n        </div>\n      )\n    },\n\n    unmounted() {\n      this.removeHandlers()\n    },\n  }\n\n  let placeholder\n\n  export default {\n    name: 'vue-treeselect--menu-portal',\n    inject: [ 'instance' ],\n\n    created() {\n      this.portalTarget = null\n    },\n\n    mounted() {\n      this.setup()\n    },\n\n    unmounted() {\n      this.teardown()\n    },\n\n    methods: {\n      setup() {\n        const { instance } = this\n\n        const el = document.createElement('div')\n        document.body.appendChild(el)\n\n        this.portalTarget = createApp({\n          parent: this,\n          ...PortalTarget,\n        })\n        .provide('instance', instance)\n        .mount(el)\n\n\n        // this.portalTarget = new Vue({\n        //   el,\n        //   parent: this,\n        //   ...PortalTarget,\n        // })\n      },\n\n      teardown() {\n        this.portalTarget.$el?.parentNode?.removeChild(this.portalTarget.$el)\n        this.portalTarget.$el.innerHTML = ''\n\n        //this.portalTarget.$destroy() // $destroy is removed in Vue 3\n        this.portalTarget = null\n      },\n    },\n\n    render() {\n      if (!placeholder) placeholder = (\n        <div class=\"vue-treeselect__menu-placeholder\" />\n      )\n\n      return placeholder\n    },\n  }\n</script>\n","<template>\n  <div ref=\"wrapper\" :class=wrapperClass>\n    <HiddenFields />\n    <Control ref=\"control\" />\n    <MenuPortal v-if=\"appendToBody\" ref=\"portal\" />\n    <Menu v-else ref=\"menu\" />\n  </div>\n</template>\n\n<script>\n  import treeselectMixin from '@/mixins/treeselectMixin.js'\n  import HiddenFields from '@/components/HiddenFields.vue'\n  import Control from '@/components/Control.vue'\n  import Menu from '@/components/Menu.vue'\n  import MenuPortal from '@/components/MenuPortal.vue'\n\n  import {defineComponent} from 'vue';\n  export default defineComponent({\n    name: 'vue-treeselect',\n    mixins: [ treeselectMixin ],\n    components:{\n      HiddenFields,Control,Menu,MenuPortal\n    },\n\n    computed: {\n      wrapperClass() {\n        return {\n          'vue-treeselect': true,\n          'vue-treeselect--single': this.single,\n          'vue-treeselect--multi': this.multiple,\n          'vue-treeselect--searchable': this.searchable,\n          'vue-treeselect--disabled': this.disabled,\n          'vue-treeselect--focused': this.trigger.isFocused,\n          'vue-treeselect--has-value': this.hasValue,\n          'vue-treeselect--open': this.menu.isOpen,\n          'vue-treeselect--open-above': this.menu.placement === 'top',\n          'vue-treeselect--open-below': this.menu.placement === 'bottom',\n          'vue-treeselect--branch-nodes-disabled': this.disableBranchNodes,\n          'vue-treeselect--append-to-body': this.appendToBody,\n        }\n      },\n    },\n\n    // render() {\n    //   return (\n    //     <div ref=\"wrapper\" class={this.wrapperClass}>\n    //       <HiddenFields />\n    //       <Control ref=\"control\" />\n    //       {this.appendToBody ? <MenuPortal ref=\"portal\" /> : <Menu ref=\"menu\" />}\n    //     </div>\n    //   )\n    // },\n  })\n</script>\n"],"names":["fuzzysearch","needle","haystack","tlen","qlen","outer","i","j","nch","fuzzysearch_1","noop","noop_1","warning","checker","complainer","message","onLeftClick","mouseDownHandler","evt","args","scrollIntoView","$scrollingEl","$focusedEl","scrollingReact","focusedRect","overScroll","isObject","value","type","isObject_1","freeGlobal","global","_freeGlobal","require$$0","freeSelf","root","_root","now","now_1","reWhitespace","trimmedEndIndex","string","index","_trimmedEndIndex","reTrimStart","baseTrim","_baseTrim","Symbol","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag","getRawTag","isOwn","tag","unmasked","result","_getRawTag","objectToString","_objectToString","require$$1","require$$2","nullTag","undefinedTag","baseGetTag","_baseGetTag","isObjectLike","isObjectLike_1","symbolTag","isSymbol","isSymbol_1","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","other","isBinary","toNumber_1","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","thisArg","leadingEdge","timerExpired","remainingWait","timeSinceLastCall","timeSinceLastInvoke","timeWaiting","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","debounce_1","element","listener","expand","shrink","expandChild","shrinkChild","lastWidth","lastHeight","test","stop","unbind","width","height","removeFromArray","arr","elem","idx","intervalId","registered","INTERVAL_DURATION","run","item","$el","watchSizeForIE9","unwatch","watchSize","isIE9","locked","removeSizeWatcher","watchSizeForBrowsersOtherThanIE9","findScrollParents","$scrollParents","$parent","isScrollElment","overflow","overflowX","overflowY","setupResizeAndScrollEventListeners","scrollParent","$scrollParent","isNaN","x","isPromise","obj","INFINITY","MAX_INTEGER","toFinite","sign","toFinite_1","toInteger","remainder","toInteger_1","before","n","before_1","once","once_1","identity","identity_1","constant","constant_1","createMap","isPlainObject","copy","key","deepExtend","target","source","keys","len","last","array","length","last_1","includes","arrOrStr","find","predicate","ctx","quickDiff","arrA","arrB","NO_PARENT_NODE","UNCHECKED","INDETERMINATE","CHECKED","ALL_CHILDREN","ALL_DESCENDANTS","LEAF_CHILDREN","LEAF_DESCENDANTS","LOAD_ROOT_OPTIONS","LOAD_CHILDREN_OPTIONS","ASYNC_SEARCH","ALL","BRANCH_PRIORITY","LEAF_PRIORITY","ALL_WITH_INDETERMINATE","ORDER_SELECTED","LEVEL","INDEX","KEY_CODES","INPUT_DEBOUNCE_DELAY","MIN_INPUT_WIDTH","MENU_BUFFER","sortValueByIndex","a","b","sortValueByLevel","createAsyncOptionsStates","stringifyOptionPropValue","match","enableFuzzyMatch","getErrorMessage","err","instanceId","treeselectMixin","count","internalValue","id","node","indeterminateNodeIds","selectedNode","ancestor","visibleOptionIds","rootNode","newValue","oldValue","nodeIdsFromValue","propName","prevNodeMap","rawNodes","nodeId","raw","label","fallbackNode","defaultNode","valueArray","nodeIdListOfPrevValue","nextSelectedNodeIds","descendant","map","queue","parentNode","callback","currNode","child","walk","enabled","_b","_a","searchQuery","done","lowerCasedSearchQuery","splitSearchQuery","filterValue","matchKey","_this66","entry","ref","$menu","_d","_c","scroll","prev","scrollToOption","$option","forceReset","current","first","next","getLast","nextState","selectedNodeMap","selectedNodeId","checkedStateMap","ancestorNode","nodes","normalizedOptions","children","isDefaultExpanded","isRootNode","level","isBranch","isLeaf","isDisabled","isNew","lowerCased","nestedSearchLabel","normalized","isLoaded","branchNodes","option","leafNodes","action","isPending","start","succeed","fail","end","isFullyChecked","curr","hasUncheckedSomeDescendants","lastValue","lastSelectedNode","stringifyValue","JSON","stringify","defineComponent","name","inject","functional","render","context","instance","disabled","hasValue","stringifiedValues","multiple","joinValues","join","delimiter","stringifiedValue","_createVNode","keysThatRequireMenuBeingOpen","ENTER","END","HOME","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","_sfc_main$b","data","inputWidth","computed","needAutoSize","searchable","inputStyle","watch","$nextTick","updateInputWidth","created","debouncedCallback","updateSearchQuery","methods","clear","onInput","focus","$refs","input","blur","onFocus","trigger","isFocused","openOnFocus","openMenu","onBlur","menu","getMenu","document","activeElement","closeMenu","onKeyDown","which","keyCode","ctrlKey","shiftKey","altKey","metaKey","isOpen","preventDefault","BACKSPACE","backspaceRemoves","removeLastValue","getNode","disableBranchNodes","select","ESCAPE","highlightLastOption","highlightFirstOption","shouldExpand","toggleExpanded","setCurrentHighlightedOption","highlightPrevOption","highlightNextOption","DELETE","deleteRemoves","onMouseDown","stopPropagation","renderInputContainer","props","push","renderInput","renderSizer","on","keydown","attrs","tabIndex","_mergeProps","required","Math","max","sizer","scrollWidth","_sfc_main$a","placeholderClass","placeholder","_sfc_main$9","renderSingleValueLabel","selectedNodes","customValueLabelRenderer","$slots","renderValueContainer","shouldShowValue","Placeholder","Input","_sfc_main","_openBlock","_createElementBlock","_hoisted_1","_cache","_createElementVNode","_sfc_main$7","Object","handleMouseDown","itemClass","labelRenderer","DeleteIcon","_sfc_main$6","renderMultiValueItems","slice","limit","MultiValueItem","renderExceedLimitTip","limitText","_resolveComponent","default","_sfc_main$4","shouldShowX","clearable","hasUndisabledValue","allowClearingDisabled","shouldShowArrow","alwaysOpen","some","renderX","title","clearAllText","clearValueText","handleMouseDownOnX","renderArrow","arrowClass","handleMouseDownOnArrow","ArrowIcon","beforeClearAll","handler","shouldClear","then","setTimeout","focusInput","toggleMenu","ValueContainer","single","SingleValue","MultiValue","String","icon","_isSlot","s","prototype","toString","call","_isVNode","arrowPlaceholder","checkMark","minusMark","Option","shouldShow","shouldShowOptionInMenu","renderOption","optionClass","isSelected","isHighlighted","localSearch","active","isMatched","handleMouseEnterOption","renderLabelContainer","renderCheckboxContainer","renderCheckbox","renderLabel","renderSubOptionsList","renderSubOptions","renderNoChildrenTip","renderLoadingChildrenTip","renderLoadingChildrenErrorTip","shouldFlattenOptions","hasBranchNodes","handleMouseDownOnLabelContainer","checkedState","forest","checkboxClass","shouldShowCount","showCountOnSearchComputed","showCount","countMap","showCountOf","NaN","labelClassName","countClassName","customLabelRenderer","_createTextVNode","childrenStates","childNode","Tip","noChildrenText","isLoading","loadingText","loadingError","retryTitle","handleMouseDownOnRetry","retryText","currentTarget","loadChildrenOptions","_slot","listItemClass","directionMap","top","bottom","above","below","_sfc_main$2","menuStyle","maxHeight","menuContainerStyle","zIndex","appendToBody","onMenuOpen","onMenuClose","menuSizeWatcher","menuResizeAndScrollEventListeners","mounted","unmounted","renderMenu","renderBeforeList","async","renderAsyncSearchMenuInner","renderLocalSearchMenuInner","renderNormalMenuInner","renderAfterList","beforeListRenderer","afterListRenderer","rootOptionsStates","renderLoadingOptionsTip","renderLoadingRootOptionsErrorTip","renderNoAvailableOptionsTip","renderOptionList","noResults","renderNoResultsTip","getRemoteSearchEntry","shouldShowSearchPromptTip","defaultOptions","shouldShowNoResultsTip","renderSearchPromptTip","renderAsyncSearchLoadingErrorTip","searchPromptText","loadRootOptions","handleRemoteSearch","noOptionsText","noResultsText","adjustMenuOpenDirection","setupMenuSizeWatcher","setupMenuResizeAndScrollEventListeners","removeMenuSizeWatcher","removeMenuResizeAndScrollEventListeners","$control","getControl","menuRect","getBoundingClientRect","controlRect","menuHeight","viewportHeight","window","innerHeight","spaceAbove","spaceBelow","isControlInViewport","hasEnoughSpaceBelow","hasEnoughSpaceAbove","openDirection","placement","remove","PortalTarget","setupHandlers","removeHandlers","updateMenuContainerOffset","controlResizeAndScrollEventListeners","controlSizeWatcher","updateWidth","setupControlResizeAndScrollEventListeners","setupControlSizeWatcher","removeControlResizeAndScrollEventListeners","removeControlSizeWatcher","$portalTarget","style","portalTargetRect","offsetY","left","round","transform","t","body","portalTargetClass","wrapperClass","portalTargetStyle","getInstanceId","Menu","_sfc_main$1","portalTarget","setup","teardown","el","createElement","appendChild","createApp","parent","provide","mount","removeChild","innerHTML","HiddenFields","Control","MenuPortal","_normalizeClass","_ctx","_component_HiddenFields","_component_Control","_createBlock","_component_MenuPortal","_component_Menu"],"mappings":"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","x_google_ignoreList":[0,1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,30,33]}